(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    365473,       6788]
NotebookOptionsPosition[    354353,       6607]
NotebookOutlinePosition[    354754,       6623]
CellTagsIndexPosition[    354711,       6620]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Reviewing Probability", "Section",
 CellChangeTimes->{{3.9448487458361225`*^9, 
  3.94484874867618*^9}},ExpressionUUID->"a95eef93-0a1c-3746-8d2f-\
8c03d537a6f2"],

Cell[BoxData[
 RowBox[{"<<", "Wolfram`QuantumFramework`"}]], "Code",
 CellChangeTimes->{{3.9388807111816216`*^9, 3.938880716857874*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b3e38939-ad2e-dc42-9e22-cfae2a09644e"],

Cell[CellGroupData[{

Cell["Key Concepts", "Subsection",
 CellChangeTimes->{{3.9448487565071926`*^9, 
  3.944848758051235*^9}},ExpressionUUID->"d47a7f2d-e3d8-a646-800b-\
2925ca67ba16"],

Cell["Random outcome", "Item",
 CellChangeTimes->{{3.9448487641071663`*^9, 3.944848772534397*^9}, {
  3.945083983169876*^9, 3.9450839880544662`*^9}, {3.9450853294131107`*^9, 
  3.945085330108259*^9}},ExpressionUUID->"d25bbdeb-3d67-2b4e-a22a-\
7dccf980dd4f"],

Cell["Probability distribution", "Item",
 CellChangeTimes->{{3.9448487641071663`*^9, 
  3.944848772534397*^9}},ExpressionUUID->"1ad28be2-632c-2f46-baa1-\
84defee11031"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiments and Randomness", "Subsection",
 CellChangeTimes->{{3.9450842281823845`*^9, 3.945084231085821*^9}, {
  3.945088886049017*^9, 
  3.9450888905680294`*^9}},ExpressionUUID->"8a65c536-47fd-0649-a611-\
4a5099f3c6b0"],

Cell[TextData[{
 "You will no doubt be familiar with coin flips or dice as ways of generating \
random outcomes. For purposes of this course, you can think of a ",
 StyleBox["random outcome",
  FontWeight->"Bold"],
 " as a well defined result of some experiment. The randomness of the outcome \
generally means that several different outcomes were possible and there is no \
way to tell exactly which outcome will happen without running the experiment."
}], "Text",
 CellChangeTimes->{{3.945085291101513*^9, 3.9450853176283836`*^9}, {
  3.9450853533803387`*^9, 3.945085373932991*^9}, {3.945085588900688*^9, 
  3.945085600461693*^9}, {3.9450858169158382`*^9, 
  3.945085950666769*^9}},ExpressionUUID->"a99a2876-174d-ad44-aee4-\
86201ca9154d"],

Cell["\<\
You can find much more information on probability and statistics in any of \
the following Wolfram U courses:\
\>", "Text",
 CellChangeTimes->{
  3.9450855848760777`*^9},ExpressionUUID->"0caacd39-bc7a-df4c-bcef-\
56175aed7f9b"],

Cell[TextData[ButtonBox["Introduction to Probability",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
probability/"], None},
 ButtonNote->
  "https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
probability/"]], "Item",
 CellChangeTimes->{{3.945085380508417*^9, 
  3.945085413546896*^9}},ExpressionUUID->"dc127136-a384-b241-87a8-\
49163a2a9890"],

Cell[TextData[ButtonBox["Introduction to Statistics",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
statistics/"], None},
 ButtonNote->
  "https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
statistics/"]], "Item",
 CellChangeTimes->{{3.945085380508417*^9, 
  3.945085436441641*^9}},ExpressionUUID->"b243c298-eff2-5a4f-b900-\
358f1e9df0e8"],

Cell[TextData[ButtonBox["Introduction to Finite Mathematics",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
finite-mathematics/"], None},
 ButtonNote->
  "https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
finite-mathematics/"]], "Item",
 CellChangeTimes->{{3.945085380508417*^9, 3.9450854074504757`*^9}, {
  3.945085437934431*^9, 3.9450854492283*^9}, {3.9450855274990215`*^9, 
  3.945085527500023*^9}},ExpressionUUID->"5186e9a5-7cc1-434d-bcd6-\
437f95594bb8"],

Cell[TextData[{
 "As you saw in previous lessons, the measurement outcomes of qubit states \
after running a quantum circuit do not always give the same results. Instead, \
quantum theory gives a way of computing the ",
 StyleBox["probability distribution",
  FontWeight->"Bold"],
 " for possible measurement outcomes. You can think of a probability \
distribution as a rule that assigns probabilities for each possible outcome \
of an experiment."
}], "Text",
 CellChangeTimes->{{3.9450854540443497`*^9, 3.945085499540102*^9}, {
  3.9450855373336105`*^9, 3.945085565252907*^9}, {3.9450859836765633`*^9, 
  3.945086073819351*^9}},ExpressionUUID->"a7ad6136-43aa-3e46-8dce-\
d3445484c29c"],

Cell["\<\
Let\[CloseCurlyQuote]s look at a couple examples of generating random \
outcomes to build intuition.\
\>", "Text",
 CellChangeTimes->{{3.9450863574437885`*^9, 
  3.945086383034889*^9}},ExpressionUUID->"7b606baf-0b78-564a-8b89-\
f19177ee58d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Numbers", "Subsection",
 CellChangeTimes->{{3.9450842356135406`*^9, 3.945084237445633*^9}, {
  3.945086399483801*^9, 
  3.9450864015551624`*^9}},ExpressionUUID->"239562c2-459c-0742-ac91-\
9ac33b151e7c"],

Cell["\<\
Suppose you want to choose a random whole number between 1 and 10. As with \
many concepts related to probability and statistics, there is a built-in \
Wolfram Language function to accomplish this:\
\>", "Text",
 CellChangeTimes->{{3.945086419387413*^9, 
  3.9450865199953384`*^9}},ExpressionUUID->"d70f70ef-bc1a-a64b-bcc3-\
9a38afeacffd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "10"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{3.945086444261326*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"e18b0798-dd83-cf42-ac18-3462fd8e8583"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{{3.9450864449189034`*^9, 3.945086448910202*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"dcb7b315-af9e-1041-9634-55884575f452"]
}, Open  ]],

Cell["\<\
Each time you make the random choice, the outcome will be different. You can \
also simulate a sequence of random choices:\
\>", "Text",
 CellChangeTimes->{{3.945086505914669*^9, 
  3.9450865453806267`*^9}},ExpressionUUID->"0f46b1ee-01e5-0a41-b171-\
f167e749208c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], ",", "20"}], "]"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"2dd8d839-102b-d64a-926d-a8953aa8f5fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "9", ",", "9", ",", "1", ",", "4", ",", "6", ",", "5", ",", "6", 
   ",", "1", ",", "9", ",", "3", ",", "7", ",", "10", ",", "2", ",", "1", ",",
    "5", ",", "9", ",", "7", ",", "6", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.945086413375641*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"a82c25bb-c456-9343-b8b6-7ce3012f138a"]
}, Open  ]],

Cell[TextData[{
 "The experiment to \[OpenCurlyDoubleQuote]choose a random whole number \
between 1 and 10\[CloseCurlyDoubleQuote] generally assumes that random means \
each number has an equal probability to be chosen. Let\[CloseCurlyQuote]s \
look at some specific data to see that your intuitions about equal \
probability for outcomes must be considered carefully. You can use ",
 Cell[BoxData[
  ButtonBox["SeedRandom",
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["https://reference.wolfram.com/language/ref/SeedRandom.html"], None},
   ButtonNote->"https://reference.wolfram.com/language/ref/SeedRandom.html"]],
   "InlineCode",ExpressionUUID->"fd2046e4-3831-6b4e-8307-9c1ce356d7f1"],
 " to give simulated random results reproducibility:"
}], "Text",
 CellChangeTimes->{{3.9450865659394646`*^9, 3.945086683851324*^9}, {
  3.945086871267208*^9, 3.9450869078665485`*^9}, {3.9450869402906265`*^9, 
  3.945086944508871*^9}},ExpressionUUID->"9a92bab1-48ed-4846-98e8-\
e1ec8c64013e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2134", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"numberdata", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "10"}], "}"}], ",", "20"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.94508673007909*^9, 3.9450867443469753`*^9}, {
  3.9450868012855816`*^9, 3.9450868060276012`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"bf3194b2-7c9a-1d41-974f-a7362ace1fbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "5", ",", "7", ",", "6", ",", "5", ",", "2", ",", "6", ",", "2", 
   ",", "9", ",", "9", ",", "5", ",", "2", ",", "10", ",", "7", ",", "10", 
   ",", "8", ",", "9", ",", "3", ",", "2", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.9450867451974144`*^9, 3.9450868067848816`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"906c2c8f-85b4-c245-975f-af779e990965"]
}, Open  ]],

Cell["\<\
The following histogram shows some features of this outcome that may surprise \
you:\
\>", "Text",
 CellChangeTimes->{{3.945086846427105*^9, 3.94508685878866*^9}, {
  3.945086949602453*^9, 
  3.9450869571624775`*^9}},ExpressionUUID->"04da42bd-d5dd-764f-b4c9-\
d9cfb6aa1b2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"numberdata", ",", 
   RowBox[{"{", 
    RowBox[{".5", ",", "10.5", ",", "1"}], "}"}], ",", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", "Automatic"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9450867664203815`*^9, 3.9450867675299015`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"50bc984f-1b70-8e47-a4e2-2c8db67574ec"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.616], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.616], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0}, {2.5, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{48.65671208842074, 
           82.77770263085469}, {-65.42944994508738, 96.10714045755046}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0}, {3.5, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{82.27770263085469, 116.39869317328863`}, {
           55.347992856891, 96.10714045755046}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{149.5196837157226, 
           183.64067425815657`}, {-105.68859754574683`, 96.10714045755046}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{183.14067425815657`, 217.2616648005905}, {
           15.088845256231536`, 96.10714045755046}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.5, 0}, {7.5, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{216.7616648005905, 250.88265534302445`}, {
           15.088845256231536`, 96.10714045755046}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.5, 0}, {8.5, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{250.38265534302445`, 284.50364588545835`}, {
           55.347992856891, 96.10714045755046}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.5, 0}, {9.5, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{284.00364588545835`, 
           318.1246364278923}, {-25.170302344427924`, 96.10714045755046}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.5, 0}, {10.5, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{317.6246364278923, 351.74562697032627`}, {
           15.088845256231536`, 96.10714045755046}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.3, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], "ChartDefaultStyle" -> {
      RGBColor[0.97858, 0.678934, 0.157834], 
      RGBColor[0.368417, 0.506779, 0.709798], 
      RGBColor[0.560181, 0.691569, 0.194885], 
      RGBColor[0.922526, 0.385626, 0.209179], 
      RGBColor[0.528488, 0.470624, 0.701351], 
      RGBColor[0.772079, 0.431554, 0.102387], 
      RGBColor[0.363898, 0.618501, 0.782349], 
      RGBColor[1, 0.75, 0], 
      RGBColor[0.647624, 0.37816, 0.614037], 
      RGBColor[0.571589, 0.586483, 0.], 
      RGBColor[0.915, 0.3325, 0.2125], 
      RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
      RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
      RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
    "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
    RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRange->{{0.5, 10.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.9450867680403194`*^9, 3.945086810296196*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"2c5ba8f2-d211-0549-879f-d8e8b48b1751"]
}, Open  ]],

Cell["\<\
Notice that in this particular experimental outcome, the numbers 1 and 4 were \
not chosen at all. Also, the number five was chosen more than twice as often \
as you would have expected. These (perhaps) unexpected features of this \
particular outcome are perfectly consistent with a statistical experiment.\
\>", "Text",
 CellChangeTimes->{{3.9450868630344334`*^9, 3.9450868666511345`*^9}, {
  3.9450869609542217`*^9, 3.9450870221870785`*^9}, {3.94508709245854*^9, 
  3.945087314665968*^9}},ExpressionUUID->"0fdaba13-dbd1-a24f-b373-\
49cd377fb42b"],

Cell["\<\
There is always a difference between the probability distribution of outcomes \
and the observed frequency of outcomes. If you repeat an experiment \
infinitely many times, the observed frequencies will converge to the expected \
distribution. However, any finite number of outcomes may display quirky \
features. Repeating an experiment many times is the best way to verify the \
expected probability distribution really does describe the experiment.\
\>", "Text",
 CellChangeTimes->{
  3.9450873174899845`*^9},ExpressionUUID->"43c77180-c73e-9546-a1af-\
733f01f9ae98"],

Cell[TextData[{
 "While the specifics are beyond the scope of this course, you can use \
functions like ",
 Cell[BoxData[
  ButtonBox["DistributionFitTest",
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["https://reference.wolfram.com/language/ref/DistributionFitTest.\
html"], None},
   ButtonNote->
    "https://reference.wolfram.com/language/ref/DistributionFitTest.html"]], 
  "InlineCode",ExpressionUUID->"424c047f-947f-9e46-991b-054e235e8e1c"],
 " to see if observed outcomes match an expected distribution:"
}], "Text",
 CellChangeTimes->{{3.9450875337709618`*^9, 
  3.945087590376917*^9}},ExpressionUUID->"c227e502-0ded-414a-9427-\
528a24b9b22d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DistributionFitTest", "[", 
  RowBox[{"numberdata", ",", 
   RowBox[{"DiscreteUniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "10"}], "}"}], "]"}], ",", "\"\<TestDataTable\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.945087374833824*^9, 3.945087429425564*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"31c19bda-e9ba-cb4f-bc10-5c1d70e918bc"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\<\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"\>", 
      "12.`", "0.15120388277664787`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.945087379283062*^9, 3.94508743004364*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"3bbd54c5-0e7a-dd4f-8783-6ef987962e0c"]
}, Open  ]],

Cell["\<\
These results can be automatically interpreted for you by the same function:\
\>", "Text",
 CellChangeTimes->{{3.9450875960904007`*^9, 
  3.9450876334342823`*^9}},ExpressionUUID->"e35c5665-0b97-3041-b4a7-\
7da624afb7a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DistributionFitTest", "[", 
  RowBox[{"numberdata", ",", 
   RowBox[{"DiscreteUniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "10"}], "}"}], "]"}], ",", "\"\<TestConclusion\>\"", 
   ",", 
   RowBox[{"SignificanceLevel", "->", 
    RowBox[{"15", "/", "100"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9450881971772976`*^9, 3.9450882120740395`*^9}, {
  3.9450883823815002`*^9, 3.9450884152993336`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"8d69de51-aef6-624d-aaab-3b4a51654dbb"],

Cell[BoxData[
 TemplateBox[{"\"The null hypothesis that \"", 
   TemplateBox[{"\"the data is distributed according to the \"", 
     RowBox[{"DiscreteUniformDistribution", "[", 
       RowBox[{"{", 
         RowBox[{"1", ",", "10"}], "}"}], "]"}], "\" \""}, "RowDefault"], 
   "\"is not rejected at the \"", 
   TemplateBox[{"15", "\" percent level \""}, "RowDefault"], 
   TemplateBox[{
    "\"based on the \"", 
     "\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"", 
     "\" test.\""}, "RowDefault"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.9450882130011425`*^9, {3.9450883896634216`*^9, 3.945088415798044*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"4609b389-d561-9a42-bdd5-0f576663b69d"]
}, Open  ]],

Cell[TextData[{
 "See the ",
 ButtonBox["Introduction to Statistics",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-\
to-statistics/"], None},
  ButtonNote->
   "https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
statistics/"],
 " course for more details, but from this statistical test you can roughly \
conclude that 15% of all experiments following the uniform distribution of \
whole numbers between 1 and 10 will give outcomes this far from an observed \
uniform distribution. In other words, the results are really not so unusual \
if 15% of all experiments like this are expected to show similar patterns."
}], "Text",
 CellChangeTimes->{{3.9450876618416862`*^9, 3.945087715018282*^9}, {
  3.945088224689516*^9, 
  3.9450883654821415`*^9}},ExpressionUUID->"1457c585-02f0-4b46-9808-\
a4c168d63505"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Roulette", "Subsection",
 CellChangeTimes->{{3.94508886627911*^9, 
  3.945088868464945*^9}},ExpressionUUID->"4eb8a8c3-047c-ab4d-be2a-\
2cb5db88e066"],

Cell["\<\
For many experiments, including many quantum circuits, the probabilities of \
various outcomes are not evenly distributed. In the game of chance called \
roulette, a wheel is spun, and the result will be either green, red, or \
black. An example roulette wheel is shown below:\
\>", "Text",
 CellChangeTimes->{{3.945195633265707*^9, 3.9451957153457603`*^9}, {
  3.945195909593664*^9, 3.9451959333933754`*^9}, {3.9451967382320232`*^9, 
  3.9451967520564175`*^9}},ExpressionUUID->"3cf69fa9-5123-724d-8639-\
aa49f2a19554"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "@", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"roulette", "=", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "28", ",", "9", ",", "26", ",", "30", ",", "11", ",", "7", 
        ",", "20", ",", "32", ",", "17", ",", "5", ",", "22", ",", "34", ",", 
        "15", ",", "3", ",", "24", ",", "36", ",", "13", ",", "1", ",", "0", 
        ",", "27", ",", "10", ",", "25", ",", "29", ",", "12", ",", "8", ",", 
        "19", ",", "31", ",", "18", ",", "6", ",", "21", ",", "33", ",", "16",
         ",", "4", ",", "23", ",", "35", ",", "14", ",", "2"}], "}"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"SectorChart", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"n", ",", "19"}], "]"}], "==", "0"}], ",", 
            RowBox[{"Darker", "@", "Green"}], ",", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"n", ",", "2"}], "]"}], "==", "1"}], ",", "Red", ",", 
            "True", ",", "Black"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "37"}], "}"}]}], "]"}], ",", 
      RowBox[{"SectorOrigin", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "4"}], "}"}]}], ",", 
      RowBox[{"ChartLabels", "->", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"roulette", "[", 
            RowBox[{"[", 
             RowBox[{"n", "+", "1"}], "]"}], "]"}], ",", "Bold", ",", 
           "White"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "37"}], "}"}]}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9451960040772*^9, 3.945196005920368*^9}, {
  3.945196070395378*^9, 3.9451964360436764`*^9}, {3.9451965530410233`*^9, 
  3.945196595788145*^9}, {3.945196635995821*^9, 3.945196704427473*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8ea4443b-40ff-744b-afec-e244ec76b04c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
nVehoa5tXsyZaVU0F+JW29AyyQoOfsp7TpGMuusvyd6HMhqN+/fvP3bs2OnT
p8+fP3/58mWmK+itYkNDQ0dHx6NHj4aHh6emppaWlviOQzehymd6enpkZITq
EPr56beg34V+I/q96Lej2okqKKZDTLLXiL6vmeCNXiWq11F1wbZUJKHe19dH
f33w4IH0BPl6483AwF+osDXpHERKxedOGa4AAAZ1O449lCtXbEajehmNqKt8
12RSsHA220zxOufGpsRaLNW8pxXJpgn5X55vQhkMBiowYmJiLly4cPPmTbvd
fv/+/fr6+vb2djqtPH36dAfpCk+h34t+O6qdqIJiOoS2ABUhtDViY2Op/PDi
tNSPAwI0cnApS6HsZy0tLVKL0YuIHY+9e/eulFaUxYvSK8sLyaH388sODFRP
tDuCSI1G4eLFysrK+fl5PkMNAOA59D6R+hzh/PlinU7thFcfEXJIudrZ0k3Z
6toisFJQb0nnF42U5bpMiNmN+9mIiIhTp06dP38+IyPjzp079+7doxMKnXMn
JiYQX0dbYHJysr+/n7YJlV6CQG+ObyQnJ9MW27dv37YC+PWAgFLew0Cy/yYk
zt/fO8UeFRXlrByY3mgRcd2Anr7Xt0JDG1RuiglCigkREhJKSkqowlR/EAEA
5DI6OuoI2IiOLidkRn2HSW8SU/z8lKowxe7CFHk1Z5KsVmW3nr02OyEHNruf
DQsLO3bsWGJi4vXr1/Py8kpLS+m9/MOHD8fGxnbr2oVS0PahrUTFamNjY1lZ
GW092oZJSUnHjx+nrbqxqeO1NBgOeiXXpYCNVacwJ2etTm83tsrWSy+xjTk6
XHPAZCrU6RTfkN1o84Tcp5LjxIkCu314eJjPYAIAuMeTJ09s+fnC4cM1YolG
3/jMDkLeCQx0Mw+za6Rv4ak/dAezwfBTvX6e9/yySMj/uxbCERQUdOTIkYSE
hMuXL+fm5hYVFdXV1XV3d1NP65wQEnjK4uLiyMhIT09PfX09bdXbt29fuXKF
tvPRo0elANTvW60tKkQ0eWpUqyfqdEavjkizFQyqH27dusXSjW6Vj9fr+A29
n9+t4GCflT6kXqueSo7ISFtuLlNQAACt0dnZ6TjhGB7e6vPjGB8qUfGTBYuq
oTcoafzqsE+LsS5VhNiMxvwvfenMF794+vRpu91eVVXV0dExNDQ0OzvLd/Ds
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
VGaUENJOyJg4S/YRIpw40djYyLtddyQlJSWCxTIhtiQz2qR2UXi8HRx8wGoN
MBp597wHpKamPnz4kHe7AgAAWH3y5MmlS5d4Twse8Jq/P5UZWcHB9O67ZU1m
MJuhesNkKrDbV1ZWeDftDmNiYkK4ebPk1fZktkzIfxCST8g3CTkZHLzfavXX
fOSP0WgUBME51xwAAABeLC8v2+12VYvUK4LFYEiwWv/WbP6Znx+VGc8JWdli
ZiynkuP69efPn/Nu2h1GT0+PkJDQskWrrhMeuYR83c/vhNn8htVq0Ot5j47N
iY6OxkoXAABoh9bWVs3m/grU6+MslhshIVRmNBHyVJzvXE+InVRvxMV1dHTw
btcdRmVlpRAZObxd8zJbJKRNFB4JOt2XQkJet1j0GhMeGRkZIyMjvNsVAADA
SyYmJjIzM3lPDq9g1OliLZaMkBCbTlcvxi5uKzOYjVG9ER5eVlbGu113EvPz
80Jurt2TdmY2T0gjIVmi8DhmsYSHhGghAnnfvn2lpaW82xUAAMAr3Lt37+DB
g7ynCIfMeDck5P9YLB/p9bWizFjyfPpbEQ9WCFlZMzMzvNt1x9Df3y9cuFDn
eWuvEx70Ff6GkLN6/VGL5Y9CQvz8/HiNpfPnz/f09PBuVwAAAK/w6NGjixcv
8poa9GIkwPes1nx//xpC+glZkDfxNVG9cf48Dia4T319vXD8eL+8Zmc2LQqP
64ScNhiOWK2vmc0+Fh4GgyEvL29ubo53uwIAAHiFxcVFQRAUrBjrJl8MDr5i
tf7EYKgSz13OKTTfDVK9cegQskq6yfLycoHdLhiNSrU/s98TUikKj6/4+3/B
arUGB/tmXJ04cQIFUwAAQJs0NjbGxMT4Zjp4Kzg4zWq9bTTeJ6RXOZnBbIkQ
m8Fgy89fWlri3a47gOfPnwtXr1Yo3QvO9ikhvyTkMiGxRuOh0FC186Vfu3Zt
aGiId7sCAADYhNHR0Zs3b6o6C7wZGHghNDQ3IKCckB4xV4Z6E1wNIcKlS4OD
g7zbdQfQ1tYmnD7drWZ3MPtvQkqd8qWrITzCw8OLi4uRgAUAADRLWVnZ/v37
Fff/Ur7xH5lMZYR0ETLpk3nNkWj01KmmpibejboDKC0tFcLCJtTvFGcbIOQX
hHxHhXzpiYmJnZ2dvBsVAADAlvT29iYnJyvl9sONxm+JZU2kfOPjvp3OHIlG
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
AAAAAAAAAAAAAAAAAAAAAAAAOKT+B4k5bO4=
    "], {{0, 360.}, {360., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360., 360.},
  PlotRange->{{0, 360.}, {0, 360.}}]], "Output",
 CellChangeTimes->{{3.945196101007597*^9, 3.9451961307209663`*^9}, {
   3.9451962328007298`*^9, 3.9451962819294376`*^9}, {3.94519631398407*^9, 
   3.9451963878106976`*^9}, {3.945196420483946*^9, 3.9451964369903145`*^9}, 
   3.945196596324503*^9, {3.94519666383683*^9, 3.945196705297655*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"834e966b-7489-0641-8268-2cbe2f5a399f"]
}, {2}]],

Cell[TextData[{
 "This roulette wheel has 18 red outcomes, 18 black outcomes, and 2 green \
outcomes. You can use the ",
 Cell[BoxData[
  ButtonBox["RandomChoice",
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["https://reference.wolfram.com/language/ref/RandomChoice.html"], 
     None},
   ButtonNote->
    "https://reference.wolfram.com/language/ref/RandomChoice.html"]], 
  "InlineCode",ExpressionUUID->"bcd44380-84a1-ff43-95bd-f65c8e8710bf"],
 " function to simulate outcomes using given weights:"
}], "Text",
 CellChangeTimes->{{3.945196804240959*^9, 
  3.945196891456482*^9}},ExpressionUUID->"1ab340ba-2f54-bf4d-8f6a-\
7001204cfc61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"18", ",", "18", ",", "2"}], "}"}], "->", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Black", ",", "Green"}], "}"}]}], ",", "20"}], 
  "]"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"0afaf606-98b3-794c-a0c3-0a217e695f2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.945195898783554*^9, {3.945196918472044*^9, 3.9451969206550713`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"6bfbbda0-44f9-9b4f-9f6e-30c419f657c7"]
}, Open  ]],

Cell["\<\
With the given weights, you would expect to get roughly one green outcome out \
of twenty trials:\
\>", "Text",
 CellChangeTimes->{{3.945196924976475*^9, 3.9451969333373947`*^9}, {
  3.9451969718170414`*^9, 
  3.9451970103282547`*^9}},ExpressionUUID->"db16f2b9-ea8a-e44d-9236-\
9755e151019c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2134", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"colordata", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"18", ",", "18", ",", "2"}], "}"}], "->", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Black", ",", "Green"}], "}"}]}], ",", "20"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9451969555628033`*^9, 3.9451969954560566`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"a5ba56cf-2476-9c49-89a3-cc990d54f619"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9451969630136127`*^9, 3.945196995917145*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"18ef0be5-07ae-2d45-aa41-4e7db3324979"]
}, Open  ]],

Cell["\<\
As with the random number example, notice that the observed frequency in \
these particular trials is not equal for red and black, even though they have \
the same probability according to the distribution:\
\>", "Text",
 CellChangeTimes->{{3.9452009280918045`*^9, 
  3.9452010130119343`*^9}},ExpressionUUID->"26eb9de9-1e4c-8a46-845e-\
b4ee7146bce1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"colorcounts", "=", 
   RowBox[{"Counts", "[", "colordata", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Values", "@", "colorcounts"}], ",", 
   RowBox[{"ChartStyle", "->", 
    RowBox[{"Keys", "@", "colorcounts"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9452007598883514`*^9, 3.9452007821572666`*^9}, {
  3.9452008128876343`*^9, 3.9452008831972294`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"b9c87a9f-d154-cb4b-b01e-8a489dfb6b4c"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.4116533139111435, 0.}, {4.35360524399126, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6789999999999999], Thickness[Small]}], 
     {RGBColor[1, 0, 0], EdgeForm[{Opacity[0.6789999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 11.},
          RoundingRadius->0],
         StatusArea[#, 11]& ,
         TagBoxNote->"11"],
        StyleBox["11", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[11, {}], "Tooltip"]& ]}, 
     {GrayLevel[0], EdgeForm[{Opacity[0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 8.},
          RoundingRadius->0],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 1, 0], EdgeForm[{Opacity[0.6789999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 1.},
          RoundingRadius->0],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.4116533139111435, 0.}, {4.430862345229425, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{3.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {3.4512017479970867`, 
            0.}]}], {{}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.4116533139111435, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.9452007827357254`*^9, 3.945200885166191*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"a829ea09-4d9a-8842-9d87-25e3c459e99a"]
}, Open  ]],

Cell["\<\
In fact, the P-value closer to 1 indicates that this sample variation away \
from the overall distribution is quite typical:\
\>", "Text",
 CellChangeTimes->{{3.9452611394458847`*^9, 3.9452611400537815`*^9}, {
  3.945261672701645*^9, 3.945261676709654*^9}, {3.9452619112620697`*^9, 
  3.9452620018773537`*^9}, {3.9452620529815426`*^9, 
  3.945262098838724*^9}},ExpressionUUID->"e8090885-604b-054b-9b6d-\
319c02970d18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DistributionFitTest", "[", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", "SequenceIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Sequence", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["2", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["1584", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Sequence[
     ReplaceAll[$CellContext`colordata, {
      RGBColor[1, 0, 0] -> 1, GrayLevel[0] -> 2, RGBColor[0, 1, 0] -> 3}], 
     EmpiricalDistribution[
      ReplaceAll[{18, 18, 2} -> {Red, Black, Green}, {
       RGBColor[1, 0, 0] -> 1, GrayLevel[0] -> 2, RGBColor[0, 1, 0] -> 3}]]],
    SelectWithContents->True,
    Selectable->False], ",", "\"\<TestDataTable\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.9452615968041077`*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"294d7035-4518-9f44-a473-66b55864bdd6"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\<\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"\>", 
      "0.47777777777777786`", "0.7875023777759395`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.945261600697302*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"5095e1af-e384-8b4c-ac77-43afd8d112f0"]
}, Open  ]],

Cell["\<\
Thus, this statistical test indicates you should not reject the hypothesis \
that the simulated roulette results came from the theoretical roulette \
distribution:\
\>", "Text",
 CellChangeTimes->{{3.945262102853426*^9, 3.9452621252774143`*^9}, {
  3.9452621629812164`*^9, 3.94526219868552*^9}, {3.945262403708208*^9, 
  3.9452624040842857`*^9}},ExpressionUUID->"c1aea2e7-b920-6b43-a038-\
3003cfd3af28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DistributionFitTest", "[", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", "SequenceIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Sequence", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["2", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["1584", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Sequence[
     ReplaceAll[$CellContext`colordata, {
      RGBColor[1, 0, 0] -> 1, GrayLevel[0] -> 2, RGBColor[0, 1, 0] -> 3}], 
     EmpiricalDistribution[
      ReplaceAll[{18, 18, 2} -> {Red, Black, Green}, {
       RGBColor[1, 0, 0] -> 1, GrayLevel[0] -> 2, RGBColor[0, 1, 0] -> 3}]]],
    SelectWithContents->True,
    Selectable->False], ",", "\"\<ShortTestConclusion\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9452616269751797`*^9, 3.9452616454151554`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"92d8a3ac-800c-a545-98a5-a40f00308923"],

Cell[BoxData["\<\"Do not reject\"\>"], "Output",
 CellChangeTimes->{{3.9452616293084984`*^9, 3.945261646049593*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"86017e91-4f71-6643-bf46-2b4df190db51"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Roulette Extension", "Subsection",
 CellChangeTimes->{{3.945263585481745*^9, 
  3.945263587930025*^9}},ExpressionUUID->"a9321b63-cc6b-4740-b3f1-\
aaaa92ea8220"],

Cell[TextData[{
 "As a further exploration of the roulette example, what is the probability \
for getting ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f41ea3c3-9293-1f4b-aca1-c8d9a102cc4e"],
 " green results on 20 spins of the roulette wheel? You can use the Wolfram \
Language\[CloseCurlyQuote]s support for probability and statistics to compute \
the answer without resorting to formulas. However, the Wolfram U courses \
linked at the beginning of the lesson are excellent resources for getting a \
complete introduction to probability."
}], "Text",
 CellChangeTimes->{{3.9452611394458847`*^9, 3.9452611400537815`*^9}, {
  3.9452624555652122`*^9, 3.945262579532732*^9}, {3.945263592571762*^9, 
  3.945263594235325*^9}, {3.945352327693516*^9, 
  3.945352329765114*^9}},ExpressionUUID->"351ace65-3357-4846-8d30-\
e6eb3b1a04e1"],

Cell["\<\
Compute the probability of getting a green result on a single spin of the \
wheel:\
\>", "Text",
 CellChangeTimes->{{3.9452625945162296`*^9, 
  3.945262620292137*^9}},ExpressionUUID->"2fc548bd-8bda-2b48-b8aa-\
08146da0274f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"x", "==", "Green"}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"EmpiricalDistribution", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"18", ",", "18", ",", "2"}], "}"}], "->", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Black", ",", "Green"}], "}"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9452610625904484`*^9, 3.945261100359131*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"5c33e0b0-6ee4-4c4b-b310-b41e4805ba34"],

Cell[BoxData[
 FractionBox["1", "19"]], "Output",
 CellChangeTimes->{3.9452610675445805`*^9, 3.9452611007116776`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"2e32dd50-f283-cb4f-9c7a-bd72c9e9b600"]
}, Open  ]],

Cell["\<\
A binomial distribution can be used to model repeated trials where there are \
successes and failures with given probability (in this case, green and \
not-green):\
\>", "Text",
 CellChangeTimes->{{3.9452630640281544`*^9, 3.9452630894277534`*^9}, {
  3.945263544211748*^9, 
  3.9452635669627304`*^9}},ExpressionUUID->"1ab52227-a817-5b4c-bede-\
5b1b957ccf10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{"k", "==", "1"}], ",", 
   RowBox[{"k", "\[Distributed]", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"20", ",", 
      RowBox[{"1", "/", "19"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9452629875847645`*^9, 3.9452630505007305`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"c6ef0b9d-2f71-7d4f-89dc-2245c96d0ac8"],

Cell[BoxData["0.3768214128457511`"], "Output",
 CellChangeTimes->{{3.945262997154436*^9, 3.9452630519009876`*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"35012b05-9f1c-a14b-8df2-faeb11cb1037"]
}, Open  ]],

Cell["\<\
The computation above shows that approximately 37.7% of all samples with 20 \
spins of the wheel should get exactly one green result. You can plot the \
probabilities for other numbers of green outcomes in 20 trials as well:\
\>", "Text",
 CellChangeTimes->{{3.945263617387821*^9, 3.9452636238597527`*^9}, {
  3.945264059507374*^9, 3.945264060723833*^9}, {3.9452646867702007`*^9, 
  3.945264752803316*^9}},ExpressionUUID->"9508c8e1-3572-7542-8e6a-\
8f8d63f90c3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"BinomialDistribution", "[", 
       RowBox[{"20", ",", 
        RowBox[{"1", "/", "19"}]}], "]"}], ",", "k"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "20"}], "}"}], ",", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression", "SequenceIcon", 
        GridBox[{{
           RowBox[{
             TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["Sequence", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["10", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["1376", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     Sequence[
     PlotRange -> All, ExtentSize -> 1/2, ScalingFunctions -> "Log", Axes -> 
      False, Frame -> True, FrameLabel -> {"Green Outcomes", "Probability"}, 
      FrameTicks -> {{Automatic, None}, {
         Range[0, 20], None}}, ImageSize -> Medium, GridLines -> Automatic, 
      PlotRangePadding -> {Automatic, {None, Automatic}}],
     SelectWithContents->True,
     Selectable->False]}], "]"}], "//", "Rasterize"}]], "Input",
 CellChangeTimes->{{3.945262627905905*^9, 3.9452629484838924`*^9}, {
  3.945264090689787*^9, 3.9452641794766254`*^9}, {3.945264347062031*^9, 
  3.945264376276415*^9}, {3.9452644157262115`*^9, 3.9452646672822456`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"6ec4a3f4-c9d7-fd4c-b2c0-844fec3b846d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnd+LNUd63zfJTS7zL+S/yG0uc+uQW4FN/BpDZgOyhxAYDAKPSMjgRHCy
NzuLI2bNBmYl1ky0WXtsSVF21srmJaNdsF+8RyAUwW6yR7a0CGvltZdJZR7U
9HZXdz11uuuc56n6fDi8zHt+fKZOPd1d3+mu7v6Hv/Ivf+nJ3/3CF77wG38/
/PNLv/yv/vHzz//yv/6n/yD855998Td+/de++Kv//J988Td/9dd+9fl/9Ct/
Lzz53//OF77wTnj////5AQAAAACOxBMAAABYzLHHc+vQRa3x9OnTYzcBsqFq
7qBkrcFgmoQuag02gx6hau6gZK3BYJqELmoNNoMeoWruoGStwWCahC5qDTaD
HqFq7qBkrcFgmoQuag02gx6hau6gZK3BYJqELmoNNoMeoWruoGStwWCahC5q
DTaDHqFq7qBkrcFgmoQuag02gx6hau6gZK3BYJqELmoNNoMeoWruoGStwWCa
hC5qDTaDHqFq7qBkrcFgmoQuag02gx6hau6gZK3BYJqELmoNNoMeoWruoGSt
wWCahNvNtAabQY9QNXdQstZgAE1CF7UGm0GPUDV3ULLWYDBNQhe1BptBj1A1
d1Cy1mAwTUIXtQabQY9QNXdQstZgME1yrC56/0c/efbeh7mPdz/46CitrQk2
gx6hau6gZK1B3kiS7KKv/eGzL3/je7mPN//X/57Xvvjy28+98Fru4/mXXl/v
qzcKm0GPUDV3ULLWIG8kSXZRGOL3CAYhcsxryRvHgs2gR6iaOyhZa9SRN3a7
3WazOTk5CV/n7Ozs9vZW/9nr6+v5TiBvtAabQY9QNXdQstaoIG+EsHF6ehq+
SIgcV1dX8nNIEZrP3t/fS0qZec+x8sbvfevPQuT4rS9/W/8I7//S1+/ntT/c
fbLHtJDwmNfWBJtBj1A1d1Cy1qggb4SYEb7Fzc2N/DfEj7Ozs5Aiwg/zH+zC
xsK88d0//dFb73zw6ps/0D/C+//8/b/UfLv3fvix/qERhpyzRzoKD428DtgM
eoSquYOStUYFeSNkhtPT0/4zIXskd3FcXV2F98hnF+YNYfVgUEhL3kjCZtAj
VM0dlKw1vOeN+/t7OZLSf3K324UnLy4upj51d3cnMz222+35+Tl5g7zRh82g
R6iaOyhZa3jPG5Icrq6uBs+HJ0OQmPlU+IgccGktb9x8+909poWEh77N3mEz
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
U9cuY/+GXptlNqslb1RTtUKttdC9vrRRM3mjNerOGyFshC+oyRunp6dTEvKG
XptlNqslb1RTtUKttdC9vrRRM3mjNWrNG9vttssS/bwx5ubmZr4TyBt6bZbZ
rJa8UU3VCrXWQvf60kbN5I3WqDJvdGFDssRM3pB3zt/llryh12aZzWrJG9VU
rVBrLXSvL23UTN5ojVrzRnd8ZD5vnD8ybyNv6LVZZrNa8kY1VSvUWgvd60sb
NZM3WqPKvNFnJm/I3o+7u7ukQfOLfK3+h9yquNOSN6qpWqHWWuheX9qombzR
Gi3njdPT0+TOjQfyhuEhppCWvFFN1Qq11kL3+tJGzeSN1jh63ri/v5/ayXB1
dRUigZw8En7unu/PBR0wnokxlTfkRJX5mRudQfNFfK3+h9yquNOSN6qpWqHW
WuheX9qombzRGsfNG7vd7uzsLJo3Li4uwvPn5+chachpreEZeWmVvBGeVH53
8oZem2U2qyVvVFO1Qq210L2+tFEzeaM1jpg3urAxzhvj80okHiTnWoyZyhvK
gykP5A3DQ0whLXmjmqoVaq2F7vWljZqXrGg/+5uf7z76dI/HT//6b7OaDSty
rLxxe3t7cnISfnt0/4bs3Ohf8FP2aXS7OPRE84bY+sdo5g2at/la/Q+5VXGn
JW9UU7VCrbXQvb60UfOSFe3Zex8+98JrezzeeueDrGbDihwrb4TfG/JGiBlh
0B/njfDS+IKfIZmE5/f4ReO8oTwzpTNo3uZr9T/kVsWdlrxRTdUKtdZC9/rS
Rs3kjdY4Vt64uLiQ3RfRvCEzNwYfkVkcub8omjeiv3TGoHmbr9X/kFsVd1ry
RjVVK9RaC93rSxs1kzda4+jnp4yHfjlzZCpv7DGFYyHRialPR4R1R/8Yf3wK
X9oss1ntV776qs3u9aXNMi/XRqtWqLUWuteXNmpesqL9l9s/+Rf/7lvh8ev/
9r8qH/L+/3xzl9VsWBHyRhL2b+i1WWaz2m+yf6OWqhVqrYXu9aWNmpevaFkN
ztJCCcgbScgbem2W2ayWvFFN1Qq11kL3+tJGzeSN1jCYNx5Wnb+xHPKGXptl
Nqslb1RTtUKttdC9vrRRM3mjNWzmjZOTk7Ozs8E79zs/ZTnkDb02y2xWS96o
pmqFWmuhe31po2byRmvYzBsrXn9jOeQNvTbLbFZL3qimaoVaa6F7fWmjZvJG
a9jMG1PXF9Xc7mR1yBt6bZbZrJa8UU3VCrXWQvf60kbN5I3WsJk3Hj6frRG9
f8qBIW/otVlms1ryRjVVK9RaC93rSxs1kzdaw2ze2O12U/eHPTDkDb02y2xW
S96opmqFWmuhe31po2byRmscPW/Yh7yh12aZzWrJG9VUrVBrLXSvL23UTN5o
DfJGEvKGXptlNqslb1RTtUKttdC9vrRRM3mjNcgbScgbem2W2ayWvFFN1Qq1
1kL3+tJGzeSN1iBvJCFv6LVZZrNa8kY1VSvUWgvd60sbNZM3WoO8kYS8oddm
mc1qyRvVVK1Qay10ry9t1EzeaA3yRhLyhl6bZTarJW9UU7VCrbXQvb60UTN5
ozXIG0kGd6Kfepuv1f+QWxV3WvJGNVUr1FoL3etLGzWTN1qDvJGE/Rt6bZbZ
rJa8UU3VCrXWQvf60kbN5I3WIG8kIW/otVlms1ryRjVVK9RaC93rSxs1kzda
g7yRhLyh12aZzWrJG9VUrVBrLXSvL23UTN5oDfJGEvKGXptlNqslb1RTtUKt
tdC9vrRRM3mjNcgbScgbem2W2ayWvFFN1Qq11kL3+tJGzeSN1iBvJCFv6LVZ
ZrNa8kY1VSvUWgvd60sbNZM3WoO8kYS8oddmmc1qyRvVVK1Qay10ry9t1Eze
aA3yRhLyhl6bZTarJW9UU7VCrbXQvb60UTN5ozXIG0nIG3ptltmslrxRTdUK
tdZC9/rSRs0288aLL7+9x+Otdz7IanabkDeSkDf02iyzWS15o5qqFWqthe71
pY2abeaN5154bY/Hq2/+IKvZbULeSELe0GuzzGa15I1qqlaotRa615c2aiZv
tAZ5Iwl5Q6/NMpvVkjeqqVqh1lroXl/aqJm80RrkjSTkDb02y2xWS96opmqF
Wmuhe31po2abeePZex+GxxtP39c/wvt3H32a1ew2IW8k4f6wem2W2ayWvFFN
1Qq11kL3+tJGzTbzRq4219wy5I0k7N/Qa7PMZrXkjWqqVqi1FrrXlzZqJm+0
BnkjCXlDr80ym9WSN6qpWqHWWuheX9qombzRGuSNJOQNvTbLbFZL3qimaoVa
a6F7fWmjZvJGa5A3kpA39Noss1kteaOaqhVqrYXu9aWNmskbrUHeSELe0Guz
zGa15I1qqlaotRa615c2aiZvtAZ5Iwl5Q6/NMpvVkjeqqVqh1lroXl/aqJm8
0RrkjSTkDb02y2xWS96opmqFWmuhe31po2byRmuQN5KQN/TaLLNZLXmjmqoV
aq2F7vWljZrJG61B3khC3tBrs8xmteSNaqpWqLUWuteXNmomb7QGeSMJeUOv
zTKb1ZI3qqlaodZa6F5f2qiZvNEa5I0k5A29NstsVkveqKZqhVproXt9aaNm
8kZrkDeSkDf02iyzWS15o5qqFWqthe71pY2ayRutQd5IQt7Qa7PMZrXkjWqq
Vqi1FrrXlzZqJm+0BnkjCXlDr80ym9WSN6qpWqHWWuheX9qombzRGuSNJNyP
Xq/NMpvVkjeqqVqh1lroXl/aqJm80Rq15o2bm5t+SNhut9G3nZ+fbzabeRX7
N/TaLLNZLXmjmqoVaq2F7vWljZrJG61RZd64uroK3ytEjv5/7+7uBm8LYSM8
T9441npqVkveqKZqhVproXt9aaNm8kZrVJk3xini9PQ0pIvuv9vtttv1Qd44
1npqVkveqKZqhVproXt9aaNm8kZr1Jc37u7u+js3hBA2QuSQn7uwIcdcyBvH
Wk/Naskb1VStUGstdK8vbdRM3miN+vLGGAkY3f6N8N8ue5A3jriemtWSN6qp
WqHWWuheX9qombzRGi3kDZmnMZ6/8UDeOOp6alZL3qimaoVaa6F7fWmjZvJG
a1SfNyRsXF1dRV8lbxxxPTWrJW9UU7VCrbXQvb60UTN5ozWOnjd2u12IBPf3
9+OX7u7uQhiQU1b7eyf6sz0HDKZtnJ6ejp/sQ9444npqVkveqKZqhVproXt9
aaNm8kZrHD1vXFxcRA92XF9fh+dPTk5C3gj/hp/DM/KSMm/MX3mjew9541jr
qVkteaOaqhVqrYXu9aWNmpvKG3/xk5/uPvo09/HxJ59lNds4x80bYayXVDDI
G3KOydnZ2W63e3jcBxJ+ToaHPvPXAu2/jbxxrPXUrJa8UU3VCrXWQvf60kbN
TeWN5196/bkXXst9vPjy21nNNs6x8kZIDjKzQvZdDPKG5JD+QZbwsyYbCGLW
vJO8ccT11KyWvFFN1Qq11kL3+tJGzeQN8sZhkJhx9cg4b5yenoY3DD5y+kjS
LPtGoozfTN444npqVkveqKZqhVproXt9aaNm8gZ54zCE5HB7e/swcbHx/uUy
OpR7LURI3jiKNstsVkveqKZqhVproXt9aaPmpvLGb//ud0Lk+OLv/JH+Ed7/
pa9HzqTwy7HyhkzMeIjlDTl0MpU3omeyFCUaXZ6OCOuO/jH++BS+tFlms9qv
fPVVm93rS5tlXq6NVq1Qay10ry9t1Lx8RctqcCGtke51wXHniz7E8oYcEJnK
G9HLdhWF/Rt6bZbZrPab7N+opWqFWmuhe31po+blK1pWgwtpjXSvC8gbScgb
em2W2ayWvFFN1Qq11kL3+tJGzeSNFRvsAoN5Y7fbzeSN7kDMwSBv6LVZZrNa
8kY1VSvUWgvd60sbNZM3VmywCwzmjYdl80VXh7yh12aZzWrJG9VUrVBrLXSv
L23UTN5YscEusJk3xrsypnZ6HADyhl6bZTarJW9UU7VCrbXQvb60UTN5Y8UG
u8Bm3pCLmXcXMI8+czDIG3ptltmslrxRTdUKtdZC9/rSRs3kjRUb7AKbeWO3
28mt1sKr4SV5T3d58wND3tBrs8xmteSNaqpWqLUWuteXNmomb6zYYBfYzBsP
j1fhkKMqQvhZf/OUdSFv6LVZZrNa8kY1VSvUWgvd60sbNZM3VmywC46eN0KK
CGFjaseFvHqspCGQN/TaLLNZLXmjmqoVaq2F7vWljZrJGys22AVHzxv2IW/o
tVlms1ryRjVVK9RaC93rSxs1kzdWbLALyBtJyBt6bZbZrJa8UU3VCrXWQvf6
0kbN5I0VG+wC8kYS8oZem2U2qyVvVFO1Qq210L2+tFEzeWPFBruAvJGEvKHX
ZpnNaskb1VStUGstdK8vbdRM3lixwS4gbyQhb+i1WWazWvJGNVUr1FoL3etL
GzWTN1ZssAvIG0kGd6Kfepuv5fOQWxV3WvJGNVUr1FoL3etLGzWTN1ZssAvI
G0nYv6HXZpnNaskb1VStUGstdK8vbdRM3lixwS4gbyQhb+i1WWazWvJGNVUr
1FoL3etLGzWTN1ZssAvIG0nIG3ptltmslrxRTdUKtdZC9/rSRs3kjRUb7ALy
RhLyhl6bZTarJW9UU7VCrbXQvb60UTN5Y8UGu4C8kYS8oddmmc1qyRvVVK1Q
ay10ry9t1EzeWLHBLiBvJCFv6LVZZrNa8kY1VSvUWgvd60sbNZM3VmywC8gb
Scgbem2W2ayWvFFN1Qq11kL3+tJGzeSNFRvsAvJGEvKGXptlNqslb1RTtUKt
tdC9vrRRM3ljxQa7gLyRhLyh12aZzWrJG9VUrVBrLXSvL23UTN5YscEuIG8k
IW/otVlms1ryRjVVK9RaC93rSxs1kzdWbLALyBtJyBt6bZbZrJa8UU3VCrXW
Qvf60kbN5I0VG+wC8kYS8oZem2U2qyVvVFO1Qq210L2+tFEzeWPFBruAvJGE
vKHXZpnNaskb1VStUGstdK8vbdRM3liu/b1v/dmLL7+d+/jS1++zemMtyBtJ
yBt6bZbZrJa8UU3VCrXWQvf60kbN5I3l2hAennvhtdzH8y+9ntUba0HeSML9
6PXaLLNZLXmjmqoVaq2F7vWljZrJG8u15I3KYP+GXptlNqslb1RTtUKttdC9
vrRRM3ljuZa8URnkDb02y2xWS96opmqFWmuhe31po2byxnLt+z/6ybP3Pnzj
6fv6R3j/ux98lNUba0HeSELe0GuzzGa15I1qqlaotRa615c2aiZvGNeuDnkj
CXlDr80ym9WSN6qpWqHWWuheX9qombxhXLs65I0k5A29NstsVkveqKZqhVpr
oXt9aaNm8oZx7eqQN5KQN/TaLLNZLXmjmqoVaq2F7vWljZrJG8a1q0PeSELe
0GuzzGa15I1qqlaotRa615c2aiZvGNeuDnkjCXlDr80ym9WSN6qpWqHWWuhe
X9qombxhXLs65I0k5A29NstsVkveqKZqhVproXt9aaNm8oZx7eqQN5KQN/Ta
LLNZLXmjmqoVaq2F7vWljZrJG8a1q0PeSELe0GuzzGa15I1qqlaotRa615c2
aiZvGNeuDnkjCXlDr80ym9WSN6qpWqHWWuheX9qombxhXLs65I0k5A29Nsts
VkveqKZqhVproXt9aaNm8oZx7eqQN5Jwf1i9NstsVkveqKZqhVproXt9aaNm
8oZx7erUmjdubm76IWG73fZffTJis9lMqdi/oddmmc1qyRvVVK1Qay10ry9t
1EzeMK5dnSrzxtXVVfheIXL0/3t3dyf/DdmDvHHIrYo7LXmjmqoVaq2F7vWl
jZrJG8a1q1Nl3hjnh9PT0/Pzc/lZdn108UNj07zN14J0yK2KOy15o5qqFWqt
he71pY2ayRvGtatTX94IQaK/c0MIYSNEDvk5RJHuZw3kDb02y2xWS96opmqF
Wmuhe31po2byhnHt6tSXN8bIAZRu/0YIG4ODKYPZHQPIG3ptltmslrxRTdUK
tdZC9/rSRs3kDePa1Wkhb4Sk0T+AMjjNZPDqGPKGXptlNqslb1RTtUKttdC9
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
AAAAAAAAAAAAAAAAAAAAAAAAAIBm+X/Mfisc
    "], {{0, 225.5}, {360., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360., 225.5},
  PlotRange->{{0, 360.}, {0, 225.5}}]], "Output",
 CellChangeTimes->{{3.945264134710249*^9, 3.9452641804733753`*^9}, {
   3.945264352284237*^9, 3.9452643780927906`*^9}, 3.9452644212024727`*^9, {
   3.945264460372593*^9, 3.945264670481407*^9}},
 CellLabel->
  "Out[113]=",ExpressionUUID->"98f542d2-d1e1-ad40-9718-455a573511a4"]
}, Open  ]],

Cell["\<\
Alternatively you could use a multinomial distribution to reach the same \
conclusion by considering all three categories:\
\>", "Text",
 CellChangeTimes->{{3.9452635704993076`*^9, 3.945263573611452*^9}, {
  3.945263608187811*^9, 3.9452636124756355`*^9}, {3.945264807513994*^9, 
  3.945264841321724*^9}},ExpressionUUID->"4d12d6b6-e936-5c4b-bae1-\
a1d673dae2ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{"g", "==", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", "b", ",", "g"}], "}"}], "\[Distributed]", 
    RowBox[{"MultinomialDistribution", "[", 
     RowBox[{"20", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"9", "/", "19"}], ",", 
        RowBox[{"9", "/", "19"}], ",", 
        RowBox[{"1", "/", "19"}]}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.945263211613043*^9, 3.9452632535481415`*^9}, {
  3.945263306397476*^9, 3.945263308005169*^9}, {3.945263338165348*^9, 
  3.9452633922351894`*^9}, {3.945263523872387*^9, 3.945263530670273*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"a21b4b9b-3b8f-f84d-8edb-e9ae0c841f6d"],

Cell[BoxData["0.3768214128457511`"], "Output",
 CellChangeTimes->{
  3.94526323738221*^9, 3.9452633088114204`*^9, 3.945263339899292*^9, 
   3.945263394217392*^9, {3.9452635251339703`*^9, 3.945263531055723*^9}},
 CellLabel->"Out[86]=",ExpressionUUID->"9b8eedef-f808-d14a-bfa0-211afba76afa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing Coins", "Subsection",
 CellChangeTimes->{{3.945265428242779*^9, 
  3.9452654323217106`*^9}},ExpressionUUID->"0a131c70-c1a0-154e-b25d-\
65ca04ce870a"],

Cell["\<\
Suppose that you want to determine whether or not a coin is fair. One way to \
do this is simply record the results of many outcomes. Record 1 if the \
outcome is heads and 0 if the outcome is tails. The following code simulates \
twenty trials:\
\>", "Text",
 CellChangeTimes->{{3.945271695098692*^9, 3.9452717051783504`*^9}, {
  3.945272465024107*^9, 3.94527250400124*^9}, {3.945272671656908*^9, 
  3.945272672969307*^9}, {3.945274781501213*^9, 
  3.9452748342396564`*^9}},ExpressionUUID->"e2c71ff4-9f80-5d49-b290-\
754051e84709"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2134", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"coindata", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", "20"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9452680599544067`*^9, 3.945268071343418*^9}, {
  3.9452681963679295`*^9, 3.945268197422598*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"43c557b7-34a4-474b-ac17-09d3f078a2e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
   "0", ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.9452680752561913`*^9, 3.9452681996642303`*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"7075ea50-69db-884c-911c-60afde2fdb6d"]
}, Open  ]],

Cell["\<\
In this case, the observed frequencies did match the probabilities from the \
distribution of a fair coin:\
\>", "Text",
 CellChangeTimes->{{3.945272684697523*^9, 
  3.945272719320959*^9}},ExpressionUUID->"70a2554a-03bd-1f45-9202-\
76075444f3af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Counts", "[", "coindata", "]"}], ",", 
   RowBox[{"ChartLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.945268106306925*^9, 3.945268141969904*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"27a1e0a7-6f8f-834f-bac9-eed6d4756e2c"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 10.},
          RoundingRadius->0],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 10.},
          RoundingRadius->0],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{2.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["0", Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["1", Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.8428550619082302, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.945268130836418*^9, 3.9452681424132957`*^9}, 
   3.945268200927946*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"6875e267-b23a-6a40-abae-6e727d1a3953"]
}, Open  ]],

Cell["\<\
Given the observed data, you can compute the likelihood of those \
observations, as a function of the coin\[CloseCurlyQuote]s probability to \
give heads. Since this sample had the same observed frequencies as the fair \
coin distribution, the maximum-likelihood estimate for the chance to give \
heads is 50%:\
\>", "Text",
 CellChangeTimes->{{3.9452746170463276`*^9, 3.945274622511921*^9}, {
  3.9452746560305367`*^9, 
  3.9452747737829227`*^9}},ExpressionUUID->"3c348b79-d7f6-594c-8cde-\
2a4a26b9b7c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Likelihood", "[", 
    RowBox[{
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"1", ",", "p"}], "]"}], ",", "coindata"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "1", ",", ".1"}], "]"}], ",", "None"}], "}"}]}], ",", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "2"}], "]"}], ",", "Dashed", ",", 
      RowBox[{"InfiniteLine", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{".5", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotRangePadding", "->", 
    RowBox[{"Scaled", "[", ".01", "]"}]}], ",", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
     "\"\<Likelihood of observed data, given heads probability \>\"", ",", 
      RowBox[{"ToString", "@", 
       RowBox[{"TraditionalForm", "[", "p", "]"}]}], ",", "\"\<\\n\>\""}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9452680926560802`*^9, 3.945268094493799*^9}, {
   3.9452682559288826`*^9, 3.9452682587588253`*^9}, {3.9452683931531506`*^9, 
   3.9452686207265377`*^9}, {3.9452725356616554`*^9, 
   3.9452726400569706`*^9}, {3.9452745513609962`*^9, 
   3.9452745795691605`*^9}, {3.9452746636345177`*^9, 3.945274666312887*^9}, 
   3.945352458769079*^9},
 CellLabel->
  "In[409]:=",ExpressionUUID->"f9dfdb9f-1e30-3642-ad2d-892a8ea845cd"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
//s3BwqVTCz//7/d/wBlbFfU
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
//s3BwqVTCz//7/d/wBlbFfU
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 1}, {0., 9.536740904395383*^-7}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0, 1}, {0., 9.536740904395383*^-7}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwVm2k41G8Xxwl/Wyl7JCGJkiQlzH0fIUkqylaWJCRlqSSUnZJIQiFKCNnG
vu9ZypItlG2G7GbGVpZQzzyv5vpc53ed+3u+59zLmxG3crpos4WBgcGNiYHh
/786NlOdNdOG2Pk9O/Om0sphZg1hZ5KQIgT25hAeP0k6cfRddFy+kCak3JdO
D3HVUD7b1pcXL2QA2X5cT1SMfyobW69UvhSyhq0spIvGwv4qQ4efaIQKuYDx
XuUnckkSqgn8Fx4HCwWAZElT96+KWlVftvz9T4UiIdzcKduKy5Jw4HR4UJ5z
JOjOdVDKqVaErkCn6YGmSFjy1SlsVbMlSDLJZsi5RoHxVZEHAv6OhMbNZLlv
Xa8g3MKnXO77Q8LWpVfH9oTEAIO51GfnmUhC4ZH7r7R/xgAnKS0ssuU1wcL5
0sodlVgQKL3Mq/TfGwKRur20fioWPBfeJukYvydcnAoi2J+KgysKpWOR/2US
1qVuxEfExcHoNoPjVg+JhGSbU38rluIgyXrzOUrLJfweZazZnhgP8ReXvpqL
FRHeipPFlNfiQU50pORQSQlBy7LK10rvLczrnQ5MiywnRA95aBT+fQuzR9iM
bIRrCTNXlFjYst7Bk8e5N7eINBBEKe7Xsw4lANOU9VXeuS+ExgMm9b0BCeA+
wqF6saSd4HTz+D6GwQS4E/cibUGvm7Azje+xzNH3cE68le2vQx+hZmJx4mLw
exgtbyhuPT9I4PvP6vVkIT0eKMGhwkMi3NzXefrRyHsotRKo0GcfIfBYE9M+
nEiErUVZQ56OYwRbf9HLKtaJ4BYslOpmMkEoTwxlbw9LBPMoYZUN+ynCjrqN
0uvlieCTftRnMW2GYD1yy351IhHyjw79vstPJZQwDAiH8iSBnNf53/X5c4St
Yjot4jgJOkUObc3VWCAUWkjLno1KAr4Hx+WLHX8ROLxeD5JqkoAyTjVdOLpM
sIj/L9SFkgSZHUSmH7tWCXkV9xH7zmRQ5Pq1q0L6D+G/wTFqvEYytJQq/mQ3
3yBcWb/0VsEpGbpWf942KP9LIAp/Ot8Umwx3+y7slkliQCaX3xPnF5Lhy/OM
CYYHTGhuwIAjUfgDVE224nUKM3pswWZzSeMDFGhsCtQ+/A+JjJRXM9/+ACya
w3+qJdlQ/nUn4aLID0B9bX3pwTQ70pmQuH+j8gMkS+4UdW/hRGS73vadEx/A
cRtzun3rNsTliAIfKqWAu0VPMacQN/owP0+StUwBW8FGe/VzPIhwL1llOCgF
DDt1N5IieVH3b+OosNwUIHGE6ynP8yF7N855tf4UELZ0tRe8JoAY16t0Frek
Qs6xUtLVKUEU7Xn3Q9LBVJA6Z6138okQavD7ceU/z1RIeGNW0bZjNzJjCS0s
/pAKqvj1811/RdHiE7UdN7+mwt/EqiDJADEkFpra0LInDTQL0yG6QgIVbzcV
89ROg3xh842Ahb3o/Euuh3J30qDc9Vke44l96NHr+/LhdWlA2R7x7cDmfsQr
LPNMfTYNVgpZXmR7yqD0uMHxJd6PYPd7+fEd3oOo773GGyObj3BK17ux008O
OUqu/GZ9/hGOX67k0D0sj5hT0/VKiz7C0JKt/KrMEaSQyf2fCFs6LHf9FebV
Poq+yDVYtsmnA6G2nlR/WxFZ5rqVe11OB7bbySyNCcdQaBHJeSQ9HfZCqbu/
8gkkqRzR8rI7HaZWeNyL3ymjsnItKc2NdFg4M5R2YKcqmqrJGkg5lwFS6Tsx
lwZG3hrXjpu4ZoBscUzfkRVAAo184ezvMsCG92WNJ1kNabQ81Lo9nwHXn0tM
JrSqo/5zh9/vFsoE1/5Ivf5vGsi5Y3T968lM8N+IVRia1kRve87kHonIhI9G
rdp2hNPomMkm58/yTDiwnifF/VAbtfbn2EaOZcLS0TLBhs9n0BpJUGTlWBaE
Joif/hyhi15YtbimWWSB1jH+o1Y855HUuFfn5SdZ8LztWX9c4gVkMDP+uOJ7
FowORPtZe+qj2dsxIw6M2XAvevk/YauLyG9Ol7DnQDZ4ez2MFtK/hHJ+5S/4
PswGtTsjcREXDBHnP1+z06JE2Obvp/io/zKKvmlsIatFBIY9Q26bAqZI8pus
JbcjEU7Ys2V2Wpoh/LHv+kAlEU6SH6nZil5FLbxZNjXjRMi0caBEnrFEslCb
3/VfDpRo93slcV5DpR9fFRbL5cDBbWGS5FQrxHDV93i6eg5MLjVwJvhdR1p8
t4vjjHLg9ZVwD3lba9TtdbLU1ysHtttKlvzVtkXUS5SKs19zYCONr+r+Y3uk
yN6H8GgOcM8EV7Xn3EIeVbVV8ss5cFX+gGDOxG3EKvO6hl80FxL7qNvCXJ3Q
+WHfk2wKuXCxSpo/y84ZRUbcrvtzKhcOpiuYJ4rcQeJ/T9aTHHLhtIL9tZ0x
d5FdvuypLt9cGHbiYeC0uoey7QQb66NygaWPQ+6OggtS7aY0fazMhXrLv7Kh
M/eRYdrrlnvb8mDhqMYIT7U7ijP307UVz4NrpS16Kc0eaJTHoc3kWB6cemej
+In0EDl5qrcj8zy4n7pNrXG/FypSOKQnfycPsrZKpZ029UYbk4KdEoF5IN7J
HlKv64OeXqR2sWblAYsAVmt944s6WL9f+lOTB+oRP+fZdP2QQGXdN8q3PDgU
mr5Tf4s/Stof3du5kQdrXs3c5b4BqHJDvf+Nbj7sFvvNcKLzCWLOO2T63DIf
auTHtDiLg5DOjZ2DPi75sKF4LdM1+Snq66QO2cTlQ6J4pN7Sq2dI9Ml3C5Oc
fKi7+CjENS4EWRM+kXTq88Foty/tfnooWkiJHjlMyQe9ZdrcADkMnTDzt5Jg
KABTDuNSUsAL5MXt+JOPrwD+PvZ6sFU0HHE+0hhfUy2AN/fO1u66+hLt06dN
fXpWAMNbr3QM7YlCwt6nVW68LwCl8y1MF2hRaEdWwjOO4gL4Y2hu9OHTK/SH
7ZKc/mgBXLGG9Rb/aDR/PNP710oB5GkkxTA7xaBxa5bO19sKQf6vxZ/Fa7Go
o6b43vCJQiDYrR5uvxqHGmg7GnzPF8LNI4HnD9+KR2Ui9gL7rAtB3Nbyq4z3
W/TBTaT0VlghBD9seDZvmYA85H3/ro4XwqJIg2rKYCJysui/ELdeCMZs4RzH
gpKQdQj9cuUugrjwW+ECysnowtS4xmNCEQQoFcRYZXxAmgIQJXOxCJIkrnsI
OqQgFc3oidYbRUAWOPk9XzEVSSboPOWNKILxM7/z1HrTkNDXpP6itCKg8u/b
5ZfzEXFtbBy8UlUEJld2D+uGp6M1Y+LXhOkiYGr41ixzIxN93c7HJ6dWDN+y
6nzvKOagT8jBptOwGN6Ss/32VeWgkluNRS63iqE80+ZOz9lclNTkdrn8VTHI
kKxbQu/lITfvobfa1GK43fewHa0UIIes4/OzW0rAkz39eEZSIbIaCDsZtrME
+h5fsp41KELnlNTHejRKYGW/WcnlxmIkMZcicz22BB5kt9edmipDgrsZHv6X
U0Jfn4sjvqocbT17ufVjQwlokq541MZWoJUUTqf5+RL4a5P/8I91FWq1cC7w
PF0Ko+HdiY8lalFdyBcWcfNSqCU7Tn1LqUXFZRLG9XdL4edbYk+sXB1KFOhZ
43hbSp+noxGD2p/Qg6/KEP2LHt94S72X3oC45ArHv7CVwUb7inf9yUaUHCof
si5SBseUbJ6mDzaiTt39PyxOlUHKBiHCZ/dndLCF796+V2WQuxXttWtrRnUH
XggZp5dBZlrmVlf/FmQSzFkTVFUGER+RTQFqRYFntmyjTJTBbvNrjfzVbYjU
NJeSp1QOu39ExIw+7ECu+2+dGztbDps8OlJ9Ux1o65OJJX7LcjD+8jNK1aQT
KWsNqbkHlcNN6VZZf9yFIuqb++FHOdwhK760PPANna79wNXmUQHJbtn7nwZ/
R8Ni4oV/n1eAV9pFSUvJH8jFJ85UPqkC0MytbLfaH+g9RKRFtFRAzopi+keW
AbRe6aN+RaQS6vlEMgqLh9DL3RtTz+Qr4T9GbV51h2Ek7fkgrFKzEgJGLZhD
pEjIkOA4KOZQCcYPzp0/d5GMiGWmrpOVlTDIncQAUyNIS7hPRKirEi7aKqtP
XRxFg+4XP+lMVIL6F8XLhdWjiF35zI5sriqY3HO2ifTuJ7pefDzd5WoVUOTT
MjwfjiPBAu5hRsZqOGFy6v7jtGlkFrJuMCZQDVUCaf06WjMo0Xq8pVG2GjbZ
LrrqT84gWf7S0mcm1VAaOpVqcZSC1F0to/hzqmH311N8/L9pKOi8ztbVhmrA
Ps82A7PnUJuUon//QDXE6Nvafz82jzJn/UvamWpA57fvcunqPDoeZ5wSebgG
Pk4Y6hFeLaLLQa0jgSo1kDPWplSzZQk9cjm5+8GpGuixD7tx/c4SqtU9GHnZ
tAbK/VJbDhj+Qrqbf31Fn9TAu3r3tVKlZXTNIsU8bZie/6tas/CdPyhAZ1dM
zHQNELZnulKZ1lHK8Rffgn/VQHjngpx7zDqicHmcdeCohc5T+RcmWjeQa/U5
ZYXjtXCAaxePttE/FJNR57L3ZC1cePrcj52BAVe8Vsrh062FymbNzAdGDJjR
WXz/yrVaMGG9epmFjRGHiP3mqwithcae0aoQry04e6u9XlZ0LWRIn6eYk7fg
ztXhZ2+TauGFXPyOKQ0mLND5eYtvaS10uZI+qO1gxu994+ZPjdfCpUN/c0qq
WHDRqEZrO6EO+D9w2Ge6seNebd+F0NN1YH6vTaV9mR0vZ1cJ6F6sg+dHe8qZ
H3BgpYfK1z7fqAPDCjGZek9OXMJ7eLnmZR04D/jxXP2wDX93v73LO74Oqtr3
644ocuFV0kc1lFYHN+2dq3IaufCJTMlnpZV1cF7/2azhwnZcqiksljdVB1Lc
d6e+HOHG/enGp5yX6sCMX2RQ1p8b/9kRZS/3tw7ebNvzt6eHG6sMbS9M5/0E
izesdDi9eXDZfRadJPwJVpJyQh+M8OKKlPl7kZGfIM5pB2HvjAAe3CoXc/Hd
J6jt0tyc1RfEG3dvVe1I/wTJI9joZLkgRjDBFlr9CQYtx74kv9yJq/oG4gNn
PkHIcZPuHgNhXM3W1OSqVg8HdVxiVQ+KYrIjM1XxbD3Y1W9vFMkWxQw9J3mW
DOth3uudwoDCHqz2vsLM6VY9xB7XLt4iLoZrlPMWbryqByGOs7HfVMVxnX38
rsuUergstCr8InEvzp++dctiuR60ncR9Cmh7cbKdSvl1hgZY4by5v0NVEgfa
9l1x5GuA1OAX4ivfJbG2FXesP6EBznJI/jmzRwq3Xw7cmR3SAO4X5yU1hqVx
zfdLdvmvGmBDYZ/3NlUZnGMsUVKS0ADPf3xLXY2WwS8Nq40/FTSA5pWd1wgm
B7CR/tqr74MNQIy6dbFp7CAe1HbgZzrUCPtPhtfZnTiM25pUbdiUGmHzK2/b
y7TDuEqLo3DbyUawSeD/yrJNHr/TTDXYadgI+Vb7Oz185LGV2kjEIc9GOP6P
1dfH6QieUjLkMWlrBGkdtkoTp6P4R9FeK/O+Rnjsvyb8Nu8obj62mGs10gi8
O87xJy8fxRlHw/QdfjfC1HLxo1UfRex4+MsLv91N0BMcMLbw9hj+LYW2Zzk0
gfaTsflkxhMYj6o3Bbs1gYq1vswzkxP4cby2t51/E2wYGZm65JzAAnwGc3tj
mqB0HnpMrivj44y32mPrm0BZ6D01vUcFuw1EhwXt+kx/X/QrBdAQrnn19rSt
1Gfwp73H+UYYs11M/qdx5DN8eFepzVmDccxnotM/rc+wtUbHQO0V4LLCxguu
dz/DyBlvJb80NbwR9mu79ZfPUMOY2y/oq441z/5pOvntM0xJMTzcXq2OQ/5j
8NlD+gzp/7okczbV8W5Pzvn+X5/hbpHzzMIjDYztJTr0xb6AxeMdY3H+mthb
U+8FPPgCb9htHOvytPCWtYwdu/Y1Q/6nC7Z7E8/iXW3qS3C4GfJqaUoKi2ex
4vsfPdbKzcDJKlO7rq6Lbc6wvsk+1wyV73sGP03o4s8xVvvUXZthwf5+vI7S
eRymIqRys6kZ5oQbDyV76eE0rhyR553NUMpq86QlUw/XjGr9yxtohorj0ceu
DOjhxWCX+o25ZqjdsSKSo6yPjQbaz7/Y2QJhgeMceuv6WOTR4+vFN1vAyybt
9MLLS/iY3m6twXstsHpL+MxA0yV8XrJAmtGrBfI3TzMqbV7C3q0jVJ2XLRCT
dlJV66YBHhVBbsNlLeDe9daxV8sQf6xcCmHZ2goMl6QzLu00xsf/WRZdym6F
bEH/Km8hU6x7rsbvVEkrGDKT4iPNTPH1N3suKNW1Qt91vw8HE0zxC6XhSeHe
VtCWlWwdlTbD006mQqObrRAxnt3zRM0cx5ENHzmfawOzAp1zak+vYsY6HfVQ
ShsMXpEnPFa3wjt3pHN5L7eB5M5/Hb23rbCcBfuAM8NXYOS4vOPeayt85U/T
PQO+r7Av1OZnGNUKFyic+rCL8BXi+AMOWsdfx7ZJwJb+7CuwR5wqr+W0wa0B
il8bD7TDtnd6xYn77LDK9pYt4cfaIUxr6VOghR1Oi7mmZKrWDt5Rtte+vrbD
/tnPE+YM2+HgF8JaOOdNrPJ96u5O33YwVAlHtJWbOO1gvKB9Xzss/454aTx2
C6tP++X8p94BoUoLJtdZnbG73NfmW6c7wFHrkmvEAWecc09ovEO3AzSuG/ds
nHPGon+JQm+MOyBE8rvooyhnvMYz5HfYoQNyFco0FfbfwTkEJUOT6A5YvH7n
fqrhXbznxezaR1oH/LF6cYOB7IKrrnl/zFvqAOpq0Gof631scZT3cvlqByzL
R7lNHL6P43pVSlq3dEKYoHFXms99vHN3sOucQCdkG82XNEq6Yp506SVF6IRP
tu3cgQ8eYJZ6G0p1WCes1xuyzJ32wMlRa28+R3ZCy93T2WOuHljzRujZzphO
8BtP0ORP8cB+HIXpo0md4N/Onr6f5SH+q8d8k6WkEz6PcZrzNT7Eq0OJ4zrk
Trh3PLxQ8pInnl0hDffId8Fkok2T7TkfXHQjrE7neBd8tN58+sveB/v04ZRq
1S4I4L9DTAnywQLF8Q4ftbqg/2fMJbd6H6zuarrxyKwL5o7FnOlCvjj2V6+Q
ZFAXcMi8drNX8sPaC20Gd0ld8JeDR/u2VgBOnilv5nreDTyBL1gp34Kw4+sL
e+0juuHORqq+wHoQVtL8+bAhuhtOFRm0WIs/xc3xHIceJXXDIyZB7Oj4FC/o
XQ6bLumGz/u6UhQ4gjEuXr5U/7MbPKwG2x5pP8M//I8MuSt/A9Y8J9VRUijm
2p06Nzb2DawH5t7llIfjkJuFtgmSvUDWXOTd8fY1XlbLGLPz7gPXTp4HG41v
sYtCfYHAp++gmnWNV5eaiEnZ9c86xfuhJEoibKUsBXdQmSkK+/vhY3zhDtcv
KbhG9pRupGw/lFbYPpnrS8EJ6Q1bjZX6oUrYk737Vwq2SmkMHdTth6vuFMMr
cql4Iv5z2OSDfnD6UVdxOSEVU0NaIzbb+mFZe90xxjsNr9t/eyPjMQAentzC
fPvTscFx83A57wEYmG5ZH1NIx5mME4+PBgxAGwOzdxZOxxbRK3fQ8wHwE6PK
7zNKx7UNwtr6iQMw9+xQYVZAOn4idu2XW/MAmF2kzgqQ0zFvL1X3s/AgVF/I
EZ4Oy8C337uqt+0ZhMX2CPGI2Axcf/ufUpfkIJwzlOY++iEDuzJx7x2UGwQj
/7T7BmUZ+Ie84tqc+iC8YNwzvmssA7975vFB8NYgLA+fYs87lokPnmT9a1s+
SH//BbAndWTinPSM/d9rBmFT8qFnaX8mVuTT0z/TOAgBJU8JdWOZmDAZnXyw
cxCYF/dbpq9m4vOhB87OTwyCTe2/t917svDdH+ei3XmG4HUUwynPW1l4WX2x
dkZwCKy35YblumThh5mvZk13D8HBiWHc55mFA7xJGEsPQdRyXsRyWBZ+te/O
+BY8BN7aGbH++Vm49E6kQsjNITguvfyoZSUL44ETZpuOQ3DuOsPn7QzZuE5z
KNDRZQja7KeSNdmycbOg1A897yFIexMx6r0zGw9WFnvzRw3BZv4yv+qJbMzA
MdD6tmYI4r97zZa6ZOPTieI3cgWH4Spvqk/wSDZWjOaSahQZhtsMbJuWk9lY
7Pn6WL/4MGx4kTqlqdn4j3uPFbPsMAy+Y7INWc3GWfpPLYzVhkFi+fP1RC4i
5mVcMNy0Gwa7M6P6TCeImGFliI/HcRiiY6KGZglETKE0d0vdGwYX5c/nG04S
ceP3ZH09z2HobYxr0jlLxO45JueSwunfW21YvjMnYtLVGs0zZcNgv9V77KY3
EbcaZjFZVNP1GPGNmfsTccnZ2Lq79cOQJstrr/6EiF8quajFfR0Gg5mLvwaf
E/Gp7dKEudFhkOJ/es84nogVWPjXmaaGQXcmSLA9gYhF1xnLdlKHoZJHSFgp
mYhXJwaU1FeGwexUsPT3dCLOqAo7GsVJAp+mNJp5MRFHFzxa/LiDBO1XwzlM
yog4IP1mbhU/CUKLHazUK4nY4pXG4ak9JHhPPxEm64iY23HlgKoiCRpa5wNc
2oj47/Wx6QvKJBAVtRaYbyfimcudadaYBMXJjxpNu4i4/lSG1HNtEog9CbnP
1EfED3ZflRgxI0GQvm1JBImIrfTkjQavkeD76Gm+xyNEfN6fMbjPls52C/w3
fxKx1HTSQpszCV6qfWNgnCRiHpH7+77cJ0FMhOl44RQRb57XulzvQQKJSS1b
0xki/lYwVVMWQIImsTpFNyoR10yW/ip8SoIPgWpeczR6/cLPpHOfk2Bx7p+p
8TwR+/kcepEaTYIrvButq4tE7Jj/91NiPAnMtD6bKfwi4ssT7SvxiSToc//l
bvabiOV1716NzCQBZ9ZNI78VIhbx1ogIyyXR79ufPF6rRMyax9cUXEQC6aN7
jO3XiHhxbPxPYDkJ0qImxU//IeJhwWI53xoS7BjfdZdvnYibdYKsHjWQYNtz
olYXnQs9L7960EyCFtX0tz4bRJyQc6D5bjsJbH/sd9+zScQhP9c3Hb6R4Fak
SU82nd0E2o7c/EEC2SGfPLm/RHz9zFsb62H69zfXtr+j8/lHTjFXf5JA8Nhh
6j86qxDV2q5MkYDVP+mM/j+6v6PcjEZUEjQOz0pG0Jmb/6ei/iIJkkXyvBro
vHG6wE53hQSfrhQYTdF5yiMw7vQGCVwYGzLX6TxjdNDuPQMZ2j41+/yjs+U8
75Y9TGSQeVfTtUTn3qcbb+JYyIAHCxO/0/ns3vFjwmxkmNr2dT6LzjUVbe2v
OcgwwH2y8h6djxsV3eTfRobA7aZsB+icOfeWKWI7GXofPOrqoOuXePokfgcP
Ga4yC4vY0TlawlnpOR8ZrIoqxufofnBVmHRyCpLhv15GeTs6BxievPVUiAwr
87HrHXQ/12gyLKwiZIAf584coLNjEM+7AFEy6CT9EnKh+z8mvn5iizgZRpI9
HbPp/eowaL29uY8MZSSD1F/0/mrRCv57KE2GmNWxUAY6VzyJT1g9QIZdzAMb
G8tEnFrm+G3pMBnWhUzdm+jzI2Jg7HhHgQzOxZ+fRi3R9zMV2OYUyfD4xnVp
A/q8eYlxE2aU6X4INAgkzRHxr9K1nhsEMnzYwm1/lD6v9pdGncYxGdS7Iy4W
UIjY8HF+ElmDDIWm+2afTBOxLMWQs+8cGYItDru6jtLPDwPd6mA9MpA18gyu
kYlYo1L9Hr5EBjYej70qw0R85fnhgQ8mZJh3PvKu8AcRP5Vnz3C5TobXDSV3
v9H3L1/MPwtpWzJoBwkfP0zf3wmMyzyDdmTwI6ixujXT83eNemg4kmH7ifc/
u+uJeMKlQofHnQy3PU4wFJYQ8d2hvL8ND8nAG+uW6VNI35+nPua5e5EhIbsn
WCWPnl/wlfCIPxl64gUX3TLo+kqdZojPyRBSvbopRj/PEjYlgs8lk4F58Nim
hCe9PlshzJhKr/98iuU3NyIu/rp9seAjGfaL777k4kLEX99tXBYhkmGwZfWf
9y36eid7ZWZL6fFbIqpNJvR6Hz/9EtROhkWH3phd8nS9NG9PQhcZODfFz5Qe
IOI7xq5H5r+RYfPTm7+n9hFxkPT1GON+MjguXIuXFSbiombCTalxMlz6lRF9
mIl+H2yfZ6v/QwZKP+EsX1c27qoMfnJmkww/G5mpfK3Z+OXtff+1/yOD0PAV
DdbGbMzTfIWpn3kE3mnmHKotpXNgw+Yc1wgYfJoaDE7IxjvWYxd37R2Bqg6T
f49uZeOtk6cG750dgbBByUJh+v3YGkW+snZuBPR6Owqs5rJwiObDH156I4DP
qATHT2ZhzsSc3qeGI3Ar/cvwbF8W5jDf1fnu6gj4H5s9RynOwmzd8w0t90ZA
dKzaKfB+FmaufkPcGzcC5StRR20mM3E/QVOb9HYEdi+oLxoMZWJiGYUc+34E
lLZn/DjenYmvFCEentQRGDWIvNpZlYlzs0guDHkj8HGRZ9kqKhNbxO1VGWoa
gaOoeY1FLROXuGfUv1qi54slH6x4loFvKZb/YD87CuxJR3oTGNJxTUdPZsm5
UQjRSk/+sfQR8zvMe9/QG4WNpChl9smPuPrDPqkGw1FgC9fY1G37iHkFX9z1
sRyFoPUjA3YxH3H5mjXnyv1RuHEp3J9R/iPmrOZCYwmjkJYedUfROA1nnLFK
qFoeBf+yji/vwlPw71nhHROvfoLAsfa904JJuPDSaaZIzTF4yfxAZub1W+yt
HfiuYGIMONsUzK6OvcbiQzrfkwLHoTb7epAc40scXKdKNAwah/d/w3a6TIfj
xVTZx6zPxsEkJ8SguTMc193lUrz1YhwWOFc20hLDsTVbV5jCm3HgnZo9KX8q
HKcdvXy6NmcclmxYs51CX2C54BtFwwPj8PVHoOy44XOsohQQKaQwAQwFR812
Kz3FvVZCx+MVJ0A7gZXKy/sU33ue3SemNAES71QsDswF4czx78LShAnQuJ9H
LUoNwqKRh94f15qAUUZ29gvCQXjLQm/WpSsT8NrBu/ERyxPcki7TFOo3AX4a
dd4dSwHYrrfKjjtwAhqXz/A1dAdg5i0GHFFPJoCrZe3xj/wAjC97nYsLmYAu
ldi1ay4BOIe1uzv91QQkGLJlzS/740jrR+Sm9AnwPKbrybjFH5uJtq8xdk8A
qVN9y5fDvphL6G5hec8EZDuoGRpw++JaXv47979PQLEuszLzkg+WYjedmhqa
gNn83sDOIh88tzTR2z41AdF9mlQxNR/s9+VvfvzfCRB7uMyxI98Lp7nIOSof
mAT+B902B84/xFecOmWWZCfhJ9mi6ojwQ7zN3mU88/AkKJ3QSfCa8MB3r5aZ
iR2bhIS59ntT3h5YVUfrLKvaJHSTjjqtFrrjr3sspHsMJ4G5xlVnWs4N/24O
HXX2nYTaTj+/Pxfv40HOHrsN/0k4eqHC/8yB+7hOV2TuyeNJgEMKXzsY7+MX
X9PX3z6bhK9W+7Ke5LrgA11NfG1RkzDOUBzyktcFW/xgPC2TPgksmgLMGyN3
cePk/YyRrkmoSFiz5Ep1xpnSlUcceiZByr77rUigM464yVyy2jcJRvaxmhbX
nbHl7Mv67UOTsMFULf5QzBn/oRGH0OQkLFjsFTuk4oQPL09vj12fhJ3pps8t
wAFHM1u4XJScAhtS6tf7L2/S32OCxzqlpmD5xZ03Q6Y3sfWnjt8XZKaAJpE0
GL/vJpb303hwTm4K/A6K3ZYqs8Of/0l7aJ+YgoJKk6Dzkzfwyp8lb6w7Bf++
uafk6Ntio4Wnzw64TEHA+3fFN6yv4wo9Dd2PrlOwz102SPnEdSyRs7FV2n0K
Oibm917eeh3THJ2e7/OaAk7XVmufQiscSDEIFwuaAlzH9N6G0woXTO55LRA3
BSkiY1nQYIl5hwsTt9RPQZQaiZwzZIafb/X0LG6cAiP+G0Oh4WaYQ1XT5PaX
KVissn/DpmWGt0R3bev9OgWSAVdWu3NM8aL+nNvHH1Mg3DfyND30Cu5okL6g
NzcFHzxqfWKvm2DdX3MyLItT8M3ljwNNzAR/lihmLvs1BWZPXTK7ho1xtfep
sr1/pmDb6NMWbTNjnK1stW+FeRoS4Lj9N3MjHJL1Zj1eeBqyRoX35HoYYLZB
q96Lu6fhs8zShVQ1AxzAcSCXVWwaHM0risRYDfDDGyW2d/ZNg9PrcGpM1CVs
L97TqSk/DaqHXoaGlVzE2lFcabOnpuHp7bBnPfz6mMXT10D5zjRMDNYrZenp
4oIFylr1vWkYFFYf5mfQxda2Ju+0XKdhefHSilLOWVx/4fDMpYfTMKcUkJfE
cxYHSAx5OwZOA8wa9a+QzmDmzycykmKmQUOZ6Br85jQuICTrHYibhksrols2
DE9j69ztyzlvp2HAo+UoH/dpXB87oVaVNA3jt4TWjj7Vwv4Okb3fs6YhjSJ8
gdv3FN7CO8/IVTcNAaOXU7Sfa+C8J6apkfXTUPyrvyr+oga22mjU3dU0DeIB
l/KeCGrguvH419Kt0+DgrTnIn6SO/UrOHtLonQaZH5bGmzUnMaNFqonbzDSs
BFhf3iaohhk+WhBHeWbg7gHRV6I6KriR0uf4jn8GcPYD326KMg6R15cz2zkD
6TES8zEvlLFgiUZWz+4ZePVdqEt/4ASWa5LO+Cw9A4fD1goPeiphs/HFlGw8
A8TQ9mm/eUUsIXPb9tbJGXi/lsuunKSIp26P75PWnAHDyK2cg0aK+N6vvuT3
Z2bAM+noH1LNURzMVJkYaTADwv6sSknvFHCp+JO3HvYz0B9G3QuP5bGXDYOF
ksMMDCnfdqvXkseaH913/3KagV0/NDX52eRxh/ztOIf7MzD3eH+OhPBhPAX6
sZY+M+Aay/PIXe0QFrDY9Urr1QzYH2gfsO+WwYPvIw2ZYmbARMfsu8BtGZw4
vo2/5s0MsJYkmuz+TwYfcmCIVH4/AwIT8akHsTTWfDQeLps5Ay7czcdmK6Xw
3VhiKE/dDFx8a6CxuroXF2/EPqmrnwF24Xc68ql78YbFY9+7TTPw0fSdop/R
Xvxkr/n9rla6vwd1s2+USOC4TA7zl30zkBS/aTURJI4bqmxkeagzwLWkyGRe
IIo5xPWl6uZmoPBPD7veEVGs508Qu7s4AwHnX3TuytmN+0/z8nWtzMD8QYK1
dL4IpnXUrIdvmYW52n1H/L8K450/d7Vw75yFSDVFpXZDQWx+irWhVngWLAO+
zU5QBXBi6mLVnd2zEKP0UeHJEwEse/tLXqfELPiE6X0/X82PT/52jQ0/NAuO
A5dsPdT48GNjq8iT8rOw2HXptNEYL24tPfd8QWEWRHecCnj1lBcbeUn66Z+Y
BXbqeIHCdx5sz9p1k1tjFt5taXxmFciNiTcrr9eemoWNKI3300e58a+WNPM7
2rMQJEs0yv+5A3u/8NbvPDcLNlubPf5q7cCRQoeUw01m4YJ60GX2E1y48mAQ
G7fjLPA5G1Noq+z4+DfBtpfOs/DH+KGwkD87znmUGs53j16fVS/P1u3sOLGt
UXin2yxc1mnvPybLhoOcWA7t8ZsFj/2PVjc9/sOMO6MWEgLo8ZKtZ7t5/sMe
NZJFEk9mYXt1TfapTBbswK0JUiGz8F5M+RPlJzO+mO+nf+jVLCQlOsUU2DDh
FlMeAWL0LEzUrEWMsjNhTebEfvk3s/DS/6RwIHELVjKsva6YMAuzxYt3+f4x
YpGVf/dV02eBO1E9pi+bAU+qeMaeqZoF8Y763JGYDWT5c+vVlppZiNu4I+a2
dQP1P4vbe+7TLFQyklJv+K6j1sHyTL3Ps6D8TH7vkbt/UJ7Xnyrjrlmo1n//
JMRxFR3cH+z/4xu9/gPZA+xLKyi5XUjbtG8WLo4s1SW4r6DXYsqdFoOzUH6i
THQzZBk9qnvw02ZiFg7X2Vm+b/mFftuzpk1OzQIOmuYSsfyFHHlf3745Owua
Mqw7XJeX0DXrot+352eBNfKafab0EtL67zery59ZKBwYdbBJXEDcOndl/bgo
8IP9h2pVMxUl1G7nVOGmwMY+ufN/d1GRvHLW9AIvBU5U6QwUOFPQeemplGtC
FNAkndrQkZxFwf9ZiJ+UpIC5/srvkLwpJOS1/m9VigLvloIlFnZPobTf0cM5
MhRgeyXXbBoyiZrGut+IHabAPJvXxva7E4j50xkBBhUK7OFS6wy9OoYiVCZ/
FRMocOvGlFvVyE8kkRfQ7QQUENXS3nxh+xOpva9+QdKkwIWlfB/Kg1Hk6X2M
s/oCBV4bO9YTSsho60rXtOtFCqTxXXNXOU9GcY7On+UMKeBkyLv5r5WEyswz
At9eoYDYGPmbs+owWlYVZ/CyoUDu7MkA37MDKDC/aviYHQVi3KrKy2P6Ed9B
s0qqPQUi65bYx2d/oKPCrz3MnSnAei5FtOzNd+S8uvU34SEFfve4sN7d34v+
OaV3//KkwH3LEz1SET3o+eTpvEwfChTVEJQIW3pQZq+fk8hjCvhJaHlpzXSj
6YLV6fUXFOhNfpwlSO5EbrKvPudHUCCC88LwNptOxJZ8NPXWKwqU6xZlTVA6
kFSEo/XAGwrEz/9sYmHpQFZ3xobLUihQDTL2g+mtaGHKt/LuRwr8ZF9b6iO1
IB/LPXEHMikgNOTBUy7Ugt5duHI5NpcCdx5sxnW++YIGD3V0u1dQYIeGvUlw
byN6N8vtyVRNgdutQQorKo3I6uMlqdBaCpiZbwRtSWpA05J9bgmNdP/WdlRm
eNaj5V3Du5s6KDCEn61cNq1DZT/2NOl1UyBwqVqvub8Web6+5tzfQ4EPf22K
z5vXImbe8TpqPwUYZK4XXbpVg7g5KDf4xikQu+vIuMqlSvSt6RD320kKyJhd
DF32rkDRgU5l+2co4N6yhzqZW45EGZe2qs5RwOFN6b4NyTIku7qWe22NAuTc
jnMrmsVorlDVdHadAjdymnjso4tQ3j1P5vt/KfCPScwM5guR8hyDcRATFaJN
1V1zMguQ1gTrRvY2KvRYeTzdbZSH2JPPfDixgwpRh8oEeJpzUeu1Z+freKhw
X/I/zryTuejSENf7HkEq/Cb81U1QzUGW3/i1NsSpUIb8TzDmZCLJl8ZzgZJU
SDHtWj/8NQNNXoiJ3r6fCmGeG5nui+nIsUVkVkKWCuhP08c23Y/oYd3eF2eO
U4EhMm4qUzMFYR8b5e4TVPBSY9gYDfuAtuDUUTNVKug1ZLPtIyejoNIDx5zV
qFC1urdNPywJvco50v9KhwqMrh+3cu97jy473vMXO0cFqb1ST22iEpCIbKFs
+gW6Hmry9DB7AkpKPeFdaUCFPb/WjxE341HOW5Acs6BC0Un8Q102Fi15LLFe
u0aFFW+hLYLnY9Bx49TZoetUkDwnTrR3jUbl27fn99lRIbLMpHP6xyv0d7bu
lcEtul+XOHnq+V4htc+uHp0OVOCoSbV9aBiFGn2GT7bcpQI7p/aBqckIxGb+
cp/2fSpoUVx5LilHoLPKWuwND6jQVkhbY3nxEnUsZHVUPaICU4aZbbFuOBqw
8rya95jeH5msmBP/QpEoHNE4/JQKRtV69w/MhSDLXeNSmc+o8N98L7yffIYm
unVpH15QQQHPTiksPEXSOQxdEhFUoMY9LhtgfIpuhRQUvouigpAXp+E+4SA0
ryniGRNLBY/jFT/qLR+jo+IdlgLxVBhpvN6V9zwQuW76a0a8o0JojfOHO58C
0HrhLGdoMhWOkDtY36n5o//2l8f6ZFPhi13g6eQAH3SGyclrM4cK++9MBqw2
eaMQkoSVRz4VmiN9b7mFeyHu6GAZlxIqLM97CKdqPEIGLnjbQhl9PfaH+mUH
H6JXeovzDpVUOBY1o2672wOJsF8puVFHhVXl5QUbETd0dXxb3Fg93V/LReZD
Mg9QYm2t97UmKogzJtrfw65ov4fMadNWKvglcv594OuCFGZXe873UsHS/Jpu
uNUddL8ps7TlO92P1/MVDzKdUUmSZbz2ABWWfP/8/b3mhJDZZ2t1Mr1f1wh6
rFYOyOfEI+3qUSpsXRfr05S+jer45GUJ43R9etEm4n/skXbb66VjM1TYaC5+
pFJth4I/nu3Lo9D1PVGXq869gdoC/5UdnqPCaxbZgbvZtugivuEn84sKa7rd
j3garJE58Tj37r9UsO+Iaba2uIaKrqxydTDQoK2Ilif51BJx/Ve21Z+JBhWr
6wvr7ldRjRlim2ajwdh3LsUznmZoJ9s/ljhOGizmzTjECJqiO/k1TBe4aKDF
d0zySe1lJMGh+a+AlwYrGZ8Th08aI49Cls0bAjQwnmi1kxI0Qt2WTX+EhWhw
JEDOpmnNAAUU6yz7iNKgOEhziGn8Ihq02vrrqDgNgjYbi99T9NExrq8LE3tp
YFjccib+nx6asNan6srQ4EZi+lD1s/MI7+Cd/XeQBhnJS0sR87rodfm3qTw5
GuyrcJnJtjuLtHlMxnYq0oC5+Az5VZg2SqgUGm05ToNA9WPbxgin0ZrdAMlL
mZ4vynq7259TKL3aYmAM0yC41CmsMkkDbbkl9uP1SRoM693g3/tcHZkKjPbq
aNLA4KHVXqXHJ9FWB5uunDM0YMwL+ySlAsh65/6O67o0WHjmrvzwPkKVn6ba
BC7QQL6GDQqaVJGj8O0vjwxocFvQ7vjXzBOoseFQ02FjGogWHomuR0poz525
+tHLNDid8ODrl5FjqKPpbo32VRoUfjIVf3H1KJK+p1i1fo0Gf7mphtlKCshX
dLk825oGIjStLVF7jiCF++7FfPZ0PyVabOOU5FCwmGph020ayN1JueJuLot+
tmzkeTjRgDKQy2cUfwBFSvhkk13ofj9X+7fTdj+itp3MjHhAg5rD6wvJlH1I
y50pXcuD7u/lAp2HQZJopf3xh0xvGpSdTmb6sS6O9B5qJ131o8G06Kdcm04x
lCbF8Z4nkAZFVXYyoc57EGNXy9uGJzSY0o4YPHJ1N7riGRrnFkyDF+q0WVaH
XShP+kLswVC6f69XVpyjhRDntx3Rw2E0GIq4LDpCEkQVByIjNKNowM56KeRf
BR/i6zUMX3lNg8HBE3coF3iRg69gWHosDYjSoTZma9yoUfZHiHk8DSy2yu4U
KNmBRL/HBu9IoEFVpHvTEP925OpvFvQpkQZviXVukSNbUbuc6GPXDzRYPVij
odDJgXwC3/sOptPgY99LeVk+VrTtAavOtSwaKHx4mtXqzYJi7Rx4Jog0iDvq
y6LBzIykrnT32+fR4JiAaMzxhC0o/6xy0lwBDWQfuE9YXGREaujdLZdiGsxY
HpryE2JArXIsimulNDArzFqcn9okTHB31m+ppsFzztl91Lo1wl0mpdAntTQ4
N75nhTS6Qvj3K85waz0N9vKRlZUklgkhE1tEwxtpwH1uyUHC+xdh53e7Cf4v
NPiv/K321Moi4cOXr9mxLTS44i5bMR68QFAoV3yw5ysNpO0KWEOPzxPOvmVg
k+mm65dlceFKniV8D7PtyOqh+xVsq6zuNU2w9m2NVvhO92MfWWfUa5KwcFfh
WnE/vf+N9VLPk8YJXtbRMoQhGnTccZxkmflJeH3auuzUKA1MKG6tS91kQs4B
+bMXJmlwUIFZgOXKIKF528aACYWuj7m6597XPsLP+abbVgs0EEgnXjOidBM2
uiM2by3T6w8byI6O7yAIFF99fn+dPh/ilhom8S0E+diDe7wZ5uDf+83U8MFG
whnPFWIQyxysXut9e6O/jtDraO62jW0OJu0Hlc7trCVYWX5Se8kxB7xGXg37
V6sIjzTCOt9sn4N55dO1BINSAvux3zFiPHNAaC28HjhcRHglZWr1gW8O9tcd
WWJNKCAQ2fcvZQvNQWa3O/VLcQ5htL2Kr27vHJydd/a+kPKB4FQrOaQlNQc+
XVGs9aZJhI284A8t0nOglLFHxfzMewL/K6PjPYfm4HvSqsM1lzcEbTOa8ZTS
HLxIuh7KxhROyJra/YZLdw5ey/XIREm6EYLiAy2Hz89Bh0T14ss8F4L1Req+
bP05sMu14/yXd4cgUlGRc854DoykisQeZ98kBIeZNoZYzcHS4LP5OrErBLvj
MQsc7nR9TxcDAhiVCBIBfNqsKXMgfq6ksPdvv+rfE4+29aXNgdOVPmn7km7V
H9SfXSkZc2AlHUe09W9VfWGcb66VOwce++IYxtoqVP8duHgvsIIeJ2/cHGSM
UR3sDHvL1D0H3UzDh28HEVRLHq9c7+6ZA0sLgbsabHKqkapXZZK+z0GdzB7L
ElVR1bMf5ArUh+cgsfbEs8kdf1TK3Nq++E7PQUSm2sExg3iVV4eOhelT5iBW
TiV7YdVL5c5onIH43BwUaUpN+cddUZHWvU2q+TUHCUZ3T7tVbiozM35LfrEy
Bz3CEpc7fpYpkwtV7S3/zMEax+9y4SVz5Qr7pMPym3PALu4x92l71YnXezh/
//s3BwqVTCz//7/d/wBlbFfU
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{0, 1}, {0., 9.536740904395383*^-7}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[0.880722, 0.611041, 0.142051], 
    Dashing[{Small, Small}], 
    TagBox[
     ConicHullRegionBox[{0.5, 0}, {{0, 1}}], "InfiniteLine"]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Likelihood of observed data, given heads probability \
\\!\\(\\*FormBox[\\\"p\\\", TraditionalForm]\\)\\n\"", TraditionalForm],
  PlotRange->{{0, 1}, {0., 9.536740904395383*^-7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.01], 
     Scaled[0.01]}, {
     Scaled[0.01], 
     Scaled[0.01]}},
  Ticks->{{{0., 
      FormBox["0.`", TraditionalForm]}, {0.1, 
      FormBox["0.1`", TraditionalForm]}, {0.2, 
      FormBox["0.2`", TraditionalForm]}, {0.30000000000000004`, 
      FormBox["0.30000000000000004`", TraditionalForm]}, {0.4, 
      FormBox["0.4`", TraditionalForm]}, {0.5, 
      FormBox["0.5`", TraditionalForm]}, {0.6000000000000001, 
      FormBox["0.6000000000000001`", TraditionalForm]}, {0.7000000000000001, 
      FormBox["0.7000000000000001`", TraditionalForm]}, {0.8, 
      FormBox["0.8`", TraditionalForm]}, {0.9, 
      FormBox["0.9`", TraditionalForm]}, {1., 
      FormBox["1.`", TraditionalForm]}}, {}}]], "Output",
 CellChangeTimes->{
  3.94526809530978*^9, 3.945268203390856*^9, {3.9452683943551292`*^9, 
   3.9452684009104652`*^9}, {3.9452684320314903`*^9, 
   3.9452684815189724`*^9}, {3.9452685309392643`*^9, 3.945268621304491*^9}, {
   3.9452725803858833`*^9, 3.9452725886583595`*^9}, {3.9452726286859455`*^9, 
   3.945272640767885*^9}, {3.9452745673959675`*^9, 3.945274580470747*^9}, 
   3.945274667083912*^9, 3.9453524607686653`*^9},
 CellLabel->
  "Out[409]=",ExpressionUUID->"f96955fb-8c36-e145-a47f-fee5fc9b7dc6"]
}, {2}]],

Cell["\<\
The following animation shows how the maximum-likelihood estimate for the \
probabiity to obtain heads changes as you accumulate more trials in this \
simulation. In practice, you should always fix the number of trials before \
conducting such a statistical test:\
\>", "Text",
 CellChangeTimes->{{3.94527490248938*^9, 3.9452749063419456`*^9}, {
  3.9452749554946537`*^9, 3.9452750019179153`*^9}, {3.94527506269479*^9, 
  3.945275077462324*^9}},ExpressionUUID->"471835a4-9269-b148-aff2-\
69b81eeea1cb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2134", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"coindata", "=", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "20"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Animate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Likelihood", "[", 
        RowBox[{
         RowBox[{"BinomialDistribution", "[", 
          RowBox[{"1", ",", "p"}], "]"}], ",", 
         RowBox[{"Take", "[", 
          RowBox[{"coindata", ",", "n"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"Ticks", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1", ",", ".1"}], "]"}], ",", "None"}], "}"}]}], 
       ",", 
       RowBox[{"Epilog", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "2"}], "]"}], ",", "Dashed", ",", 
          RowBox[{"InfiniteLine", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{".5", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRangePadding", "->", 
        RowBox[{"Scaled", "[", ".01", "]"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"PlotPoints", "->", "50"}], ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"\"\<Likelihood of first \>\"", ",", 
          RowBox[{"StringPadLeft", "[", 
           RowBox[{
            RowBox[{"ToString", "@", "n"}], ",", "2", ",", "\"\<0\>\""}], 
           "]"}], ",", "\"\< observations, given heads probability \>\"", ",", 
          RowBox[{"ToString", "@", 
           RowBox[{"TraditionalForm", "[", "p", "]"}]}], ",", "\"\<\\n\>\""}],
          "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"2", ",", 
         RowBox[{"Length", "@", "coindata"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"ControlPlacement", "->", "Top"}], ",", 
     RowBox[{"DefaultDuration", "->", "4"}]}], "]"}]}], "\[IndentingNewLine]",
   "]"}]}], "Input",
 CellChangeTimes->{{3.94527290924889*^9, 3.9452729513702984`*^9}, {
   3.945272984260435*^9, 3.945272993729841*^9}, {3.945273036683058*^9, 
   3.94527312124152*^9}, {3.945273153947077*^9, 3.945273232138075*^9}, {
   3.9452732673360596`*^9, 3.9452733012042904`*^9}, {3.945273339124254*^9, 
   3.945273343036951*^9}, {3.945273375883608*^9, 3.9452733759708004`*^9}, {
   3.945273426493044*^9, 3.9452735141382008`*^9}, {3.9452735979705143`*^9, 
   3.9452736020744953`*^9}, {3.945273738555401*^9, 3.945273792818878*^9}, {
   3.945273833907942*^9, 3.9452738339943695`*^9}, {3.945273888730139*^9, 
   3.9452739193623314`*^9}, {3.9452743752108173`*^9, 
   3.9452744177692776`*^9}, {3.945274504666237*^9, 3.945274508345703*^9}, 
   3.9452745954345837`*^9, {3.9452748668978767`*^9, 3.9452748720426273`*^9}, 
   3.94535247312516*^9},
 CellLabel->
  "In[410]:=",ExpressionUUID->"44605516-c66c-4443-8c8f-bda5e4779c03"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
       16, 17, 18, 19, 20}, ControlType -> Animator}}, Typeset`size$$ = {
    360., {129.517661000877, 135.249594594627}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Plot[
        Likelihood[
         BinomialDistribution[1, $CellContext`p], 
         Take[{0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 
          0}, $CellContext`n$$]], {$CellContext`p, 0, 1}, Ticks -> {
          Range[0, 1, 0.1], None}, Epilog -> {
          ColorData[97, 2], Dashed, 
          InfiniteLine[{0.5, 0}, {0, 1}]}, PlotRangePadding -> Scaled[0.01], 
        PlotRange -> All, PlotPoints -> 50, PlotLabel -> 
        "Likelihood of first " <> StringPadLeft[
           ToString[$CellContext`n$$], 2, "0"] <> 
         " observations, given heads probability " <> ToString[
           TraditionalForm[$CellContext`p]] <> "\n"], 
      "Specifications" :> {{$CellContext`n$$, {2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
          12, 13, 14, 15, 16, 17, 18, 19, 20}, DefaultDuration -> 4, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlPlacement -> Top, ControlType -> Animator, AppearanceElements -> 
        None, DefaultBaseStyle -> "Animate", DefaultLabelStyle -> 
        "AnimateLabel", SynchronousUpdating -> True, ShrinkingDelay -> 8.}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405.1, {163.11766100087704`, 168.84959459462704`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.945272951838564*^9, 3.945272985902544*^9, {3.9452730415949593`*^9, 
   3.9452731223458576`*^9}, {3.9452731864372387`*^9, 3.945273233147621*^9}, {
   3.9452732868933144`*^9, 3.9452733017345657`*^9}, 3.9452733438154488`*^9, 
   3.945273377517311*^9, {3.945273467276226*^9, 3.9452734798203545`*^9}, 
   3.9452736028918743`*^9, {3.945273740782366*^9, 3.9452737931634026`*^9}, 
   3.9452738381110764`*^9, {3.9452739006192417`*^9, 3.94527392034918*^9}, {
   3.945274386124119*^9, 3.945274418997095*^9}, 3.9452745090364304`*^9, 
   3.9452745959435253`*^9, 3.9452748745414944`*^9, 3.94535247435594*^9},
 CellLabel->
  "Out[411]=",ExpressionUUID->"b3400dca-3c3e-dd42-b98c-d31b91adb7df"]
}, {2}]],

Cell["\<\
Notice how the curve representing likelihood gets more \
\[OpenCurlyDoubleQuote]narrow\[CloseCurlyDoubleQuote] in the previous \
animation. That\[CloseCurlyQuote]s because the standard error for estimating \
the coin\[CloseCurlyQuote]s true probability distribution decreases with the \
number of trials:\
\>", "Text",
 CellChangeTimes->{{3.9452760629725037`*^9, 3.9452760959175777`*^9}, {
  3.9452761603645897`*^9, 
  3.9452762359654694`*^9}},ExpressionUUID->"1861eeca-7ade-9641-9aa0-\
d72efaaea2a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"StandardDeviation", "@", 
     RowBox[{"ChiSquareDistribution", "[", 
      RowBox[{"n", "-", "1"}], "]"}]}], "/", "n"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "200"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", ".8"}], "}"}]}], ",", 
   RowBox[{"ExtentSize", "->", "Full"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Trials\>\"", ",", "\"\<Standard Error\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9452756502181263`*^9, 3.945275796664652*^9}, {
  3.945275958303894*^9, 3.945276013990505*^9}, {3.9452762663351307`*^9, 
  3.945276270472193*^9}},
 CellLabel->
  "In[389]:=",ExpressionUUID->"d11daf24-bc1d-e04b-b2b5-ec0412bb7ea3"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[2], 
     TagBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{1.5, 0}, {2.5, 0.7071067811865475}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{2.5, 0}, {3.5, 0.6666666666666666}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{3.5, 0}, {4.5, 0.6123724356957945}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{4.5, 0}, {5.5, 0.5656854249492381}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{5.5, 0}, {6.5, 0.5270462766947299}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{6.5, 0}, {7.5, 0.49487165930539345}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{7.5, 0}, {8.5, 0.46770717334674267}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{8.5, 0}, {9.5, 0.4444444444444444}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{9.5, 0}, {10.5, 0.42426406871192845}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{10.5, 0}, {11.5, 0.4065578140908709}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{11.5, 0}, {12.5, 0.3908679799852858}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{12.5, 0}, {13.5, 0.3768445758127966}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{13.5, 0}, {14.5, 0.36421567954234174}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{14.5, 0}, {15.5, 0.35276684147527876}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{15.5, 0}, {16.5, 0.3423265984407288}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{16.5, 0}, {17.5, 0.3327561323230812}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{17.5, 0}, {18.5, 0.32394177193585}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{18.5, 0}, {19.5, 0.3157894736842105}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{19.5, 0}, {20.5, 0.3082207001484488}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{20.5, 0}, {21.5, 0.3011693009684171}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{21.5, 0}, {22.5, 0.29457912265490277}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{22.5, 0}, {23.5, 0.28840215568307825}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{23.5, 0}, {24.5, 0.2825970826302195}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{24.5, 0}, {25.5, 0.27712812921102037}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{25.5, 0}, {26.5, 0.27196414661021057}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{26.5, 0}, {27.5, 0.2670778722565918}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{27.5, 0}, {28.5, 0.2624453295839119}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{28.5, 0}, {29.5, 0.2580453370188925}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{29.5, 0}, {30.5, 0.2538591035287969}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{30.5, 0}, {31.5, 0.24986989330370432}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{31.5, 0}, {32.5, 0.2460627460628691}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{32.5, 0}, {33.5, 0.24242424242424243}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{33.5, 0}, {34.5, 0.23894230601870473}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{34.5, 0}, {35.5, 0.2356060357495806}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{35.5, 0}, {36.5, 0.2324055629261321}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{36.5, 0}, {37.5, 0.2293319290334749}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{37.5, 0}, {38.5, 0.22637698071164805}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{38.5, 0}, {39.5, 0.223533279155932}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{39.5, 0}, {40.5, 0.2207940216581962}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{40.5, 0}, {41.5, 0.21815297341461365}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{41.5, 0}, {42.5, 0.21560440805089087}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{42.5, 0}, {43.5, 0.21314305557934138}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{43.5, 0}, {44.5, 0.21076405671581147}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{44.5, 0}, {45.5, 0.2084629226588191}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{45.5, 0}, {46.5, 0.20623549957619866}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{46.5, 0}, {47.5, 0.20407793716224337}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{47.5, 0}, {48.5, 0.2019866607256804}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{48.5, 0}, {49.5, 0.19995834634964715}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{49.5, 0}, {50.5, 0.1979898987322333}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{50.5, 0}, {51.5, 0.19607843137254902}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{51.5, 0}, {52.5, 0.19422124881465536}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{52.5, 0}, {53.5, 0.1924158307016145}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{53.5, 0}, {54.5, 0.1906598174256852}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{54.5, 0}, {55.5, 0.18895099718933206}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{55.5, 0}, {56.5, 0.18728729431609847}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{56.5, 0}, {57.5, 0.18566675867119933}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{57.5, 0}, {58.5, 0.18408755606950536}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{58.5, 0}, {59.5, 0.18254795956388148}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{59.5, 0}, {60.5, 0.1810463415200036}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{60.5, 0}, {61.5, 0.17958116639513644}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{61.5, 0}, {62.5, 0.17815098414818162}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{62.5, 0}, {63.5, 0.17675442421682608}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{63.5, 0}, {64.5, 0.1753901900050285}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{64.5, 0}, {65.5, 0.1740570538305348}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{65.5, 0}, {66.5, 0.17275385228774817}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{66.5, 0}, {67.5, 0.1714794819862098}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{67.5, 0}, {68.5, 0.17023289562926802}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{68.5, 0}, {69.5, 0.16901309840131307}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{69.5, 0}, {70.5, 0.16781914463529612}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{70.5, 0}, {71.5, 0.16665013473520046}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{71.5, 0}, {72.5, 0.1655052123307359}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{72.5, 0}, {73.5, 0.1643835616438356}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{73.5, 0}, {74.5, 0.1632844050485753}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{74.5, 0}, {75.5, 0.16220700080795253}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{75.5, 0}, {76.5, 0.16115064097257747}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{76.5, 0}, {77.5, 0.16011464942776563}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{77.5, 0}, {78.5, 0.15909838007680585}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{78.5, 0}, {79.5, 0.15810121514932654}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{79.5, 0}, {80.5, 0.1571225636247067}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{80.5, 0}, {81.5, 0.15616185976140146}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{81.5, 0}, {82.5, 0.15521856172387627}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{82.5, 0}, {83.5, 0.15429215029958673}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{83.5, 0}, {84.5, 0.15338212769910864}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{84.5, 0}, {85.5, 0.15248801643312612}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{85.5, 0}, {86.5, 0.1516093582605267}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{86.5, 0}, {87.5, 0.15074571320234484}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{87.5, 0}, {88.5, 0.14989665861673773}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{88.5, 0}, {89.5, 0.14906178833057976}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{89.5, 0}, {90.5, 0.14824071182362594}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{90.5, 0}, {91.5, 0.1474330534615246}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{91.5, 0}, {92.5, 0.14663845177426132}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{92.5, 0}, {93.5, 0.1458565587768875}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{93.5, 0}, {94.5, 0.14508703932963676}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{94.5, 0}, {95.5, 0.1443295705347588}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{95.5, 0}, {96.5, 0.14358384116760647}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{96.5, 0}, {97.5, 0.14284955113970121}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{97.5, 0}, {98.5, 0.14212641099167467}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{98.5, 0}, {99.5, 0.1414141414141414}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{99.5, 0}, {100.5, 0.1407124727947029}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{100.5, 0}, {101.5, 0.14002114478941538}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{101.5, 0}, {102.5, 0.13933990591717543}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{102.5, 0}, {103.5, 0.13866851317558931}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{103.5, 0}, {104.5, 0.1380067316769935}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{104.5, 0}, {105.5, 0.13735433430339009}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{105.5, 0}, {106.5, 0.13671110137914563}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{106.5, 0}, {107.5, 0.13607682036038352}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{107.5, 0}, {108.5, 0.13545128554007216}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{108.5, 0}, {109.5, 0.13483429776788136}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{109.5, 0}, {110.5, 0.13422566418394}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{110.5, 0}, {111.5, 0.13362519796568761}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{111.5, 0}, {112.5, 0.13303271808706552}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{112.5, 0}, {113.5, 0.13244804908934305}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{113.5, 0}, {114.5, 0.13187102086292024}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{114.5, 0}, {115.5, 0.1313014684394913}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{115.5, 0}, {116.5, 0.13073923179399224}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{116.5, 0}, {117.5, 0.13018415565579333}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{117.5, 0}, {118.5, 0.12963608932863013}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{118.5, 0}, {119.5, 0.12909488651880013}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{119.5, 0}, {120.5, 0.12856040517117925}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{120.5, 0}, {121.5, 0.1280325073126419}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{121.5, 0}, {122.5, 0.12751105890249217}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{122.5, 0}, {123.5, 0.1269959296895391}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{123.5, 0}, {124.5, 0.12648699307546873}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{124.5, 0}, {125.5, 0.12598412598418898}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{125.5, 0}, {126.5, 0.12548720873684044}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{126.5, 0}, {127.5, 0.12499612493218538}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{127.5, 0}, {128.5, 0.12451076133210334}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{128.5, 0}, {129.5, 0.12403100775193798}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{129.5, 0}, {130.5, 0.12355675695545393}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{130.5, 0}, {131.5, 0.12308790455417631}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{131.5, 0}, {132.5, 0.12262434891089884}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{132.5, 0}, {133.5, 0.1221659910471573}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{133.5, 0}, {134.5, 0.12171273455447827}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{134.5, 0}, {135.5, 0.12126448550922149}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{135.5, 0}, {136.5, 0.12082115239084548}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{136.5, 0}, {137.5, 0.12038264600343535}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{137.5, 0}, {138.5, 0.11994887940033948}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{138.5, 0}, {139.5, 0.11951976781177087}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{139.5, 0}, {140.5, 0.11909522857523618}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{140.5, 0}, {141.5, 0.11867518106866319}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{141.5, 0}, {142.5, 0.11825954664610328}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{142.5, 0}, {143.5, 0.11784824857589313}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{143.5, 0}, {144.5, 0.11744121198116501}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{144.5, 0}, {145.5, 0.11703836378260098}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{145.5, 0}, {146.5, 0.11663963264333152}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{146.5, 0}, {147.5, 0.11624494891588476}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{147.5, 0}, {148.5, 0.11585424459109626}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{148.5, 0}, {149.5, 0.11546745324889432}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{149.5, 0}, {150.5, 0.11508451001088046}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{150.5, 0}, {151.5, 0.11470535149462764}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{151.5, 0}, {152.5, 0.11432991576962345}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{152.5, 0}, {153.5, 0.11395814231478886}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{153.5, 0}, {154.5, 0.11358997197750585}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{154.5, 0}, {155.5, 0.1132253469340919}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{155.5, 0}, {156.5, 0.11286421065166032}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{156.5, 0}, {157.5, 0.11250650785131017}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{157.5, 0}, {158.5, 0.11215218447259082}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{158.5, 0}, {159.5, 0.1118011876391898}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{159.5, 0}, {160.5, 0.1114534656257938}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{160.5, 0}, {161.5, 0.1111089678260765}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{161.5, 0}, {162.5, 0.11076764472176766}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{162.5, 0}, {163.5, 0.11042944785276074}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{163.5, 0}, {164.5, 0.11009432978821823}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{164.5, 0}, {165.5, 0.10976224409863536}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{165.5, 0}, {166.5, 0.109433145328825}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{166.5, 0}, {167.5, 0.10910698897178803}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{167.5, 0}, {168.5, 0.10878373144343491}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{168.5, 0}, {169.5, 0.10846333005812639}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{169.5, 0}, {170.5, 0.10814574300500139}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{170.5, 0}, {171.5, 0.107830929325063}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{171.5, 0}, {172.5, 0.10751884888899377}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{172.5, 0}, {173.5, 0.10720946237567287}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{173.5, 0}, {174.5, 0.1069027312513694}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{174.5, 0}, {175.5, 0.10659861774958647}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{175.5, 0}, {176.5, 0.10629708485153241}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{176.5, 0}, {177.5, 0.10599809626719615}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{177.5, 0}, {178.5, 0.10570161641700437}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{178.5, 0}, {179.5, 0.10540761041404026}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{179.5, 0}, {180.5, 0.10511604404680279}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{180.5, 0}, {181.5, 0.10482688376248772}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{181.5, 0}, {182.5, 0.10454009665077169}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{182.5, 0}, {183.5, 0.10425565042808149}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{183.5, 0}, {184.5, 0.10397351342233148}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{184.5, 0}, {185.5, 0.10369365455811286}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{185.5, 0}, {186.5, 0.10341604334231906}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{186.5, 0}, {187.5, 0.10314064985019203}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{187.5, 0}, {188.5, 0.10286744471177509}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{188.5, 0}, {189.5, 0.10259639909875828}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{189.5, 0}, {190.5, 0.10232748471170307}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{190.5, 0}, {191.5, 0.10206067376763313}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{191.5, 0}, {192.5, 0.1017959389879795}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{192.5, 0}, {193.5, 0.10153325358686748}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{193.5, 0}, {194.5, 0.10127259125973453}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{194.5, 0}, {195.5, 0.10101392617226773}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{195.5, 0}, {196.5, 0.10075723294965049}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{196.5, 0}, {197.5, 0.1005024866661083}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{197.5, 0}, {198.5, 0.10024966283474349}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{198.5, 0}, {199.5, 0.09999873739765024}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], AbsoluteThickness[2], Opacity[0.2], 
        RectangleBox[{199.5, 0}, {200.5, 0.09974968671630002}]}},
      Annotation[#, "Charting`Private`Tag$822600#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0038500000000000006`], AbsoluteThickness[2], LineBox[CompressedData["
1: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
ZLun2vm/2czQ+w==
       "]], {{}, LineBox[CompressedData["
1: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
DbtSvyWPoJtOWc82Sydzdv7XfwDNlNld
        "]]}, {}, {{}, {}}},
     Annotation[#, "Charting`Private`Tag$822600#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Trials\"", TraditionalForm], 
    FormBox["\"Standard Error\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 200.}, {0., 0.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.945275662417448*^9, 3.9452757969638023`*^9}, {
   3.9452759588248215`*^9, 3.945275970438816*^9}, 3.9452760167210712`*^9, {
   3.9452762667810135`*^9, 3.945276271095047*^9}},
 CellLabel->
  "Out[389]=",ExpressionUUID->"fbb96dbf-337e-1347-a9da-3e5afb6287cc"]
}, {2}]],

Cell["\<\
As the number of trials increases, the standard error in estimating the coin\
\[CloseCurlyQuote]s true distribution will tend to zero:\
\>", "Text",
 CellChangeTimes->{{3.9452765520128784`*^9, 
  3.945276598852997*^9}},ExpressionUUID->"37141724-675e-b444-9061-\
a2e983f99a0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"StandardDeviation", "[", 
     RowBox[{"ChiSquareDistribution", "[", 
      RowBox[{"n", "-", "1"}], "]"}], "]"}], "/", "n"}], ",", 
   RowBox[{"n", "->", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9452758659183846`*^9, 3.9452758753979397`*^9}, {
  3.9452763698225937`*^9, 3.94527637259733*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"513f9d3e-a2f7-b244-acc8-5396793e3ce6"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9452758758628006`*^9, 3.9452763749857197`*^9},
 CellLabel->
  "Out[390]=",ExpressionUUID->"7b7ee60f-4ec5-7841-81e0-5c6dba52f33a"]
}, Open  ]],

Cell["\<\
While you may be interested in estimating the maximum-likelihood fit for \
measurement distribution parameters, the relevant question for this example \
is whether the sample data is consistent with a fair coin or whether the \
sample data is highly unlikely to be produced by a fair coin.\
\>", "Text",
 CellChangeTimes->{{3.9452750913425655`*^9, 3.9452751551746273`*^9}, {
  3.945275198645294*^9, 3.945275233437393*^9}, {3.9453525596455975`*^9, 
  3.9453526316196804`*^9}},ExpressionUUID->"cdfe885e-042c-ab45-a8fc-\
351bcfd50649"],

Cell["\<\
As before, you can test whether or not you should reject the hypothesis that \
the coin is fair:\
\>", "Text",
 CellChangeTimes->{{3.945275261414068*^9, 
  3.9452753015041924`*^9}},ExpressionUUID->"6ecc0e7b-fa01-1d43-9d82-\
98943d101a19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DistributionFitTest", "[", 
  RowBox[{"coindata", ",", 
   RowBox[{"BinomialDistribution", "[", 
    RowBox[{"1", ",", 
     RowBox[{"1", "/", "2"}]}], "]"}], ",", "\"\<TestConclusion\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.945271568187559*^9, 3.9452716515473824`*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"81cd32f0-b5a7-9a42-97b8-672c28b93be6"],

Cell[BoxData[
 TemplateBox[{"\"The null hypothesis that \"", 
   TemplateBox[{"\"the data is distributed according to the \"", 
     RowBox[{"BinomialDistribution", "[", 
       RowBox[{"1", ",", 
         FractionBox["1", "2"]}], "]"}], "\" \""}, "RowDefault"], 
   "\"is not rejected at the \"", 
   TemplateBox[{"5", "\" percent level \""}, "RowDefault"], 
   TemplateBox[{
    "\"based on the \"", 
     "\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"", 
     "\" test.\""}, "RowDefault"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.9452715694513283`*^9, 3.945271652044798*^9}},
 CellLabel->
  "Out[279]=",ExpressionUUID->"c3e223a6-f180-0344-976f-b28b49e2833c"]
}, Open  ]],

Cell["\<\
The plot below shows that the probability of observing this particular sample \
data never falls below the given significance threshold as more trials \
accumulate:\
\>", "Text",
 CellChangeTimes->{{3.9452753110773087`*^9, 3.9452753666860924`*^9}, {
  3.945276867147604*^9, 3.945276870747772*^9}, {3.94535284688439*^9, 
  3.9453528471258545`*^9}},ExpressionUUID->"a7ddad09-7d7d-674d-8221-\
597de2d02e78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"PearsonChiSquareTest", "[", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"coindata", ",", "n"}], "]"}], ",", 
            RowBox[{"BinomialDistribution", "[", 
             RowBox[{"1", ",", 
              RowBox[{"1", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "2", ",", 
          RowBox[{"Length", "[", "coindata", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", ".05"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", 
          RowBox[{"Length", "[", "coindata", "]"}]}], "}"}]}], "]"}]}], "}"}],
     ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "Dashed"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<P-Value for Pearson's \!\(\*SuperscriptBox[\(\[Chi]\), \
\(2\)]\)\>\"", ",", "\"\<0.05 Significance Threshold\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Does the fair coin seem biased?\>\""}], 
    ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Observations\>\"", ",", "None"}], "}"}]}]}], "]"}], "//", 
  "Rasterize"}]], "Input",
 CellChangeTimes->{{3.9452717321792564`*^9, 3.94527186897106*^9}, {
  3.9452719052448616`*^9, 3.945271941228119*^9}, {3.945271971605221*^9, 
  3.945272082178976*^9}, {3.9452723210138664`*^9, 3.9452723329940186`*^9}, {
  3.9452723634319324`*^9, 3.9452724328180504`*^9}, {3.9452727882933598`*^9, 
  3.945272838899851*^9}, {3.945274934695698*^9, 3.9452749373279057`*^9}, {
  3.9453526983052616`*^9, 3.9453527054257374`*^9}, {3.945352821047695*^9, 
  3.945352829413252*^9}, {3.945352953206505*^9, 3.945352954149719*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"765efef8-1a72-3f4f-b13d-377da0e7cb7e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3duPVVX76Hn6cNGXzZ/QYf8JXPRdp6/Ivt2dDhedmLjtXVti+LVxt9t0
xcQYRbuChxA81BskHgipVthERQ6hALE4iIhSIr6IUGiJCFggp12UFFVUP2+N
l+f3MOZhzbXWnHOMNdf3kwqpWmuuOZ8151w6njXGeMb/9O//r3838N8uWbLk
P/0P8s+/e/SZ//Wppx79f/63/1H++N//5T+t+o//8h/+z3/7L//3f/iP/+Gp
//nf/3fy4Ov/zZIlr/73S5b84/cFAAAAAAAAAAAAAAAAAAAAAAAAAADQ4zZl
2L59+9mzZ0NH18LU1JQN8vDhwy7yGo4rR3EnSg5a8FUSqntJpbEV5OIvHnyz
Fb80MZ83F5v3sZU/9V4dHR2VWzdUeAAAAChuINeaNWtOnDgROsZ0W7ZsWb16
tW0wS0PUxVzpceWEyHH1FL3zzjsFXyihupdUGl5BcpYkkkhyxuCKX5qYz5uL
zX4i5Ob0PtFy68YZPAAAACxNx7zeNNfkc+26ODO1ZKO0njTNNX2fffbZ0dFR
OXrxPkd606JVPE2L+bx5n4g33njDfX7ljj28yD0SbZoJAAAAldNsk+xMkhF5
9umnn45wrFSoNC3m/hR0JqqOzo7ZT4S+Iy+j3LJli3s8/iHNAAAA/Sz/23Ud
4Je6wejoqE5ky8njpEEojUO3ZVbHnJ3t1XIGjeuWkuRRAnvjjTe0d8OmaXpQ
+TerReodNOeIjpv75o7r+h+9eXDy7vSdJif3JXvTdDKRPlWk47JI2C238XqF
3Ftzf+qpKz4/seDlK37C5Ty4zVIvn41Wt7Q3oR4o5+p7O9Q0zb795BvJ6k3L
v/Spb7/LsySbuQ+gvkebprk+31deeSX5QncDF7nhAQAAEErLQVCuvSdNO/ug
tPHs/KysnUhLMjk75tlnn/WSEWmUFtmb0ka1t7GmacmDJuuKuKltdhv5M7/t
6vZvac+dvCPX+vXYmWvJLhvXrraReOc5NYaWYSfjTG7j9Qm6l8i/RU6dp+Dl
K3jCJePQAbdK0g2b1GRFK2dPLkTy5mz5FvTSyJZehN5rk32pRS596Wcp9T3a
NE2ikkdSB2e6zWqotAMAAICOZTUXlbZgtZ2sTdk33njDzc+SFqlrNMoj9rWu
QShPSeNTNpON9RHtbnD7d5UN3AwabXvndBXJZm5Aptuz25tNTyQStzdp4btH
ksMjXVvam7aTk6nJUfS4bv8u35TH3duXY7kTIv8mj5uVpg0spnvyrJzY/DxR
z4wL2x5FM19vRpJso2/NtsxT0zS9iDmnzlPw8hU84XJlXQxykl2WIf+6JEge
8fbmttS36a6L/CuPy7tzF0LfQn7/rE389bWpEXrnra1LX9ZZkmvtHtSDuiO6
SPLnzelrGfQIAAAQM9dmy0nTpH1r25zakJb8yG6mzT9tJbpsTjb2WsiuSakJ
nWuIegG49mrqkC2VNTctGVuyaZ2afbhpOy37s5L9KVkDzLwts9K0glP/ssK2
51MP4fVXurdmr0Vqmtby1CUVuXzFT7jbmze7UGJ2mZqmmanRSsKiyYt9eZEx
fnrevNfqecs6IQUvfblnye3c+0pEz0lOmiaHcMls8fKkAAAACKJlmqbbuOaf
S75ScxnXFtXWo/Z2eZtpc9SlDO5VXkPXzQ/Kn6iVlaYlY9v0cGmRLqftpA57
k9OSjNY7blaa5rW3s2zKKJDiFsZyR/cuQfKtaaaT1ZtW8KCqyOUreML1C4Hk
mXR3nXaoZUWbmqcUKfmilybZx+TdEt7eCl76Es+SfnySoeb3puk8UzmNEVYE
AgAAgNVumuYak6nfxrvuDM2StL/jcILdoXaCyAvdWK+CkRev9Og9rslRMjCX
WuafjYKVHqVV7Pq5WqZpLXdVfGMXf2qa6S6cZnCpaVrLU5dU5PIVPOH2xvBo
fcL8qGz639Z5c4dO/fLBXUR9eZG9JS996WfJDgH19pC6c83RCn4nAAAAgLBa
pmneWKycZqqXhgy0ou1JrxCEtCelldsyX+syTcvRWZrmyu7Js65RrcpN0/Ir
P3gntuVJ6D5NWyhw+Qqe8MOJyjBJ+VF5pzf1naZyh059m1quJGdvLS99iWcp
54q4p/JzwJyTAAAAgHjYFmAq7QhwnRTtpmmbstlRW24AmNZecPJbld33pmUF
lp8hJs+AnBnbPnclLKRZXkVvWoRp2kKry1fwhGuXVs49kx9V/WlawUtf4lnK
uSKbMtI0HU3KWEcAAIBe0TJNc9NqdJBVy0GPuqXbc5GFwJL7SRYwTOoyTUtO
miso2ex3j8gb9xbD2lRsblpbaVrqxtqGbznoUS9cuWmalbx8BU/44QflEFse
oqI0LXUkYf6gx4KXPqnLs5QzPjOZpuW8OwAAAMQpP03TEY/aidNuCZGstEKb
tW7mUfJ7flc2Iadjq+M0zSUsqU3o7Yvya5Unm/3uFCVD9eoWdpmmbcqofmmn
BHZZQqSDNK3I5St4wr2aopZb/lsfryhNS+1v8upyeHsrfulLP0tZ1U6yzh4L
pQEAAPSQnDTtxIkTLtWySVnxgvxazDy/OLxrW3p7yyn6pzpO0zRUr+GafAs5
x02maV4flu6trDQtq2C73cnh7gryd5CmFbl8xU+46w9KliL0xhBWl6alVrlP
FsP30rSWl76Ks5S6dkDLuxcAAAA9QduT3kQYLWiQzLOKL2/tsjxd1Td1qWWd
+6Y17uQp98L8sXbaWD388PLWRXINreegB816C0lZgx7l5W5FZn2bbodlpWka
tj2faxIrr3WzvHU3lR7zL1/BE66rRcs70uWt9fTqfVhRmuYtVJ26unfqoMeW
l76is7QmsRJ3aprmetOK32YAAAAIbiCXtANTRwBKI9M1FK1kO1ByB9uAdFyb
1m626cHKvJY0kvMrHmjTd+DBlKu2cg15MPkWiiz7m2z2S/rguku8XXmTrbpP
0xbSzpW09r082isq6GLwenxKnJtW8PIVPOHyXpI1D+X02vdYXQkR/Qqi4Hkr
eOmrOEvecV3pkoHsuWnJMwMAAIBoZZWVk9Zp/hSthQd1yN20l5yUyq2/rLtN
3VIe1L1t2bKl5aEdaaxqAAuLzdHUOThZj9uDtpySptx7STaGU3flHnF/Jjs1
snaVT8LW85n1WrtNakUR79Dtnrrk4YpcvuInXK6s7CfrPWZFldpnVOQk29lb
rh5j1l2dureWlz759ks5S7qZu8TutCS3pzcNAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAACgYVghCAAAAACiYld9DR0LAAAAAIDeNAAAAACIC2ka
AAAAAESFNA0AAAAAokKaBgAAAABRIU0DAAAAgKiQpgEAAABAVEjTAAAAAKBj
ExMTQ0NDBTfesWOHbDw8PCyvytmMNA0AAAAAOrZixYolS5a03EzysuXLly8x
JFnL2pg0DQAAAAA6s2rVKpdztdzS5WguNdOU7eDBg6kbk6Y13vZD5w6f/C10
FHmOn7587eZM6CgAAACANly9enXlypXaNZa/8Y4dO2SbwcFB+3J5ZMWKFanb
k6Y13kvvH12/5ZvQUeTZ8PF3o8d+CR0F+t2t6buhQwAAAD1jYmJi6dKlLvMq
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
dailbt/Tadrx05dja6TVwFYAKH3hsG7K6ZdV0r8IaQzbLsUzk39WdyzE6db0
XdslFE9/ul3T0P2s+/B46KB8kjZqeLGlkAAAxG94eFgyrJGREfvgjh075EF5
KvUlLk0bHBzUR65ever611K37+k0zbY0nlg7GjqcmthqcnYV3bJ0vDi1XSC7
g564dg1vG49zRBnqYUfYrn51bzyVZLwhhdFOn3T/JYkwhQQAIH5DQ0OSYUnm
ZR9M7S+zJCPT5G5iYsKVH/FyPdXTaZqwJcsq7b6Jh33Lk5dulr7/T8bOdtZb
1+W8tnbZrDCSUueok13za9uBn0KH8xD7HUJFqwd2z63rIf+GDgQAgN6zYsWK
rDQtZ3ra1atXXaamsnK0hd5P0+xkqH5Y6fj3qdv6fiVfq+IQ5y/esIco3klh
m80VleK3Zu7O2T6LKjJWRMsum/joCztj+4rGTiCtdJJml2JLbwEA6BWdpWlu
8ppsMDQ05IpDCm8nqtfTNLvS8SdjZ0OHU7l9xydrmPBiayAUnPZl88fqSvF7
7PhPKor3FVvlNc5he+4bpOBLuQEAgCp0kKa5cZK26ogrDim09qM1kKbcd1Gp
wyd/i7y1Vi5b2m7nkYmKjrLh4+/aTX8kGH2JNKErCsxjr34Ns+EQianrd2yx
mpNn/wgdUQpX4IhvDwAAaKQO5qa54Y5eRpZaisTpraQsya6n3A+F2e2CudVN
KrFl+Z/bcKjIS4Y2faUv2Xd8sqLAPF5dSgrWlaiK6jRl+Wjvj3rRn1q3P3Q4
mQbfHmM9MgAAGsmlVzt27LAP5ld6dJPRvAdzMrteT9Pm5u/bCUrSbg8dUYWm
rt+pZ2Chl/7cmr6bv703TUzirCiwJJse9sOo13rM3pt/Yu1onJM95ba3g3Kr
61PuXp0fBAAAUKcO1k3rt9408dyGQ5EXvi7L2PgFfadVrxNny/IfPvlb/sa2
nsMzb35RaWCeA9/+qod+fuPhOg/dYK479aX3j4YOJIXt6n1sza6W3yEAAABU
YdmyZUuXLtWkzE00kweztk/OTZOUze0ka25a6THX7L3Pvu+Jr9a7Z6eMVV2i
zZblH96W/p2AspdgZM/pSgPz3Lj9lx76kb5ZlKFq2kcZYf1MW9y15Z0JAABQ
ETdeUZKswUXyi9eV5pUZ0Wr88q9WemzwumkLi5No+qTZ9sybX+g7rbrivVtT
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
eVCe8jaWNq17OwXfS8fcGfAa26tWrfLeYOpmzZZzxZN3nXtJnGdJLp+LM+Bu
2/qk1IM0zalu3CMT0xpJ8rIaOtS8+jbnL96o4igAgIpojrZy5UppGGtmsXz5
8oKZmmwp2y9dulReK3vQlE3+9LaUNMptuSJNkV68kZERm5e5F9qszes4C5im
uTfrjq7dJXEmIJVKXmi5AVJvA03t4zxLpGmpSNOc6sY9MjGtqbwOtRu3/yr9
EHYS3PMbD5e+fwBAdbSJaLMbSZdcQ7pIO9nlQbK9TbI0mfLak10mTRMTE5pC
euO+5EAuWxT2qYCDHt2blRQyf7M+5LKwnNuANC0LaVrMKhr3yMS0ppq9N7/6
1b16cSWlKnf/M3fnbIfdl6culrt/AEClVq5cmdpgdnmWJF8t95CV0LleOdm/
fbDL5remhKndfJKduWCSvXhB1NaR13NI0zreLWlazEaP/aJN4sG3x8ra7TNv
fsHEtKayY2UfW7Or3A61fccnbT1J6vADQG9JHSi4sDjdrEiDUFuYyZoGOuTP
PuhGJyZnkBXUMvFxueHy5ctthFm9ae4pofF49RlcbQd9rWym2yfzRNtN5vbs
cg15y+5V7qmc3rSCNVg07KxI3AbuEFq0pGUXXsGj2806KzWz0GaapsVtUo9o
36x7p/Kvd05seZyckyCv0kucdSx7S+ffD8rWukk9ek6apmdb3xRpWsxuTd99
9IWd2jCevHSz+31Ku52JaQ1WaYfa4Ntjuuet+8+UuGcAQNW0oEdqe9uNIczv
0ZD2Z1anWzLR00cmFmnbu3jZuvzetIUHjXabBqZmdvJ+vSIk8qeeDQ3YtZ/d
pDlve4nBSzZtZuEO6smZmyYHShZFWblypfc2s2qneNVa3NFd2951Lyq5pqnZ
R5Gjywt1WKlqq9SMd66KpGnJ4jZeYPpmbWzanSpbuv5iy11r74jJc7XkwaW3
J8o9XuR+WFhMD5OldZKFblLTtGRZntRbNAakadbQpq/KbRh/eeoiE9OazXbC
Sppf1qzG0z9ftbutYuIbAKA6+aOtXCsxtWCjyu/ecjvXRqkeLtn2zj+KsnPT
Ck43S0aoM++05olryWsr3UvTpHmsYyltiRV50CaYNv/K6U1Lpml6WjQePYQN
W3sndYdy0jRZsGfDvWWt6yKb2boutqux+NGTJ03+dY9IDO1magXTNN2/e7+a
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
    "], {{0, 199.5}, {582.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{582.5, 199.5},
  PlotRange->{{0, 582.5}, {0, 199.5}}]], "Output",
 CellChangeTimes->{
  3.9452717366969566`*^9, {3.9452717891003704`*^9, 3.9452718295247383`*^9}, {
   3.945271859999714*^9, 3.9452718697187366`*^9}, 3.945271937105688*^9, 
   3.9452719819307365`*^9, {3.945272013673336*^9, 3.945272082614113*^9}, {
   3.9452723237635117`*^9, 3.9452723336093864`*^9}, 3.9452723644222736`*^9, {
   3.9452724060348034`*^9, 3.9452724336051426`*^9}, {3.945272815906151*^9, 
   3.9452728397936745`*^9}, 3.9452749379799175`*^9, 3.945352719372492*^9, 
   3.9453528303610287`*^9, 3.9453529559659977`*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"a7a13fa5-eb1e-a847-8ab3-8c9c9df77439"]
}, {2}]],

Cell["\<\
You can simulate a biased coin with 60% probability to give heads as follows:\
\>", "Text",
 CellChangeTimes->{{3.9452768791002903`*^9, 
  3.945276900058943*^9}},ExpressionUUID->"e1782641-f0c9-f845-a438-\
05bf38bc2cea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2134", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"biasedcoindata", "=", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"1", ",", ".6"}], "]"}], ",", "100"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9452766788779945`*^9, 3.9452767378371162`*^9}},
 CellLabel->
  "In[394]:=",ExpressionUUID->"de9c42c7-5c51-b04b-b4b1-b3db90e01cac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
   "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.9452767111127815`*^9, 3.945276738593382*^9}},
 CellLabel->
  "Out[395]=",ExpressionUUID->"1348cb94-7693-7d42-b4c5-50d61fd6d35b"]
}, Open  ]],

Cell["\<\
This time, sufficiently many trials will allow you to differentiate between \
the biased coin and a fair coin. It is good practice to fix the number of \
trials before proceeding to collect data for a statistical test of this \
variety.\
\>", "Text",
 CellChangeTimes->{{3.9452769066846504`*^9, 3.945277026291559*^9}, 
   3.945277078804188*^9},ExpressionUUID->"30b91e46-259c-bb49-ae9a-\
7b2295094e27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"PearsonChiSquareTest", "[", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"biasedcoindata", ",", "n"}], "]"}], ",", 
            RowBox[{"BinomialDistribution", "[", 
             RowBox[{"1", ",", 
              RowBox[{"1", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "2", ",", 
          RowBox[{"Length", "[", "biasedcoindata", "]"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", ".05"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", 
          RowBox[{"Length", "[", "biasedcoindata", "]"}]}], "}"}]}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "Dashed"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<P-Value for Pearson's \!\(\*SuperscriptBox[\(\[Chi]\), \
\(2\)]\)\>\"", ",", "\"\<0.05 Significance Threshold\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ScalingFunctions", "->", "\"\<Log\>\""}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Observations\>\"", ",", "None"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Does the biased coin seem fair?\>\""}]}], 
   "]"}], "//", "Rasterize"}]], "Input",
 CellChangeTimes->{{3.9452766525887623`*^9, 3.9452766563176804`*^9}, {
  3.9452767150699368`*^9, 3.9452767260077877`*^9}, {3.945276758142788*^9, 
  3.945276813237566*^9}, {3.9452770409492283`*^9, 3.945277058972933*^9}, {
  3.9452770982391224`*^9, 3.9452771412052097`*^9}, {3.945352774711647*^9, 
  3.945352776974554*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"ee2a4a69-847d-0442-8e85-46b8b3357119"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3e+TVNW+53nmx4N5OP4JE86f4IN5NjGPjH7aExNGzEQwwWUuLeHYbXjH
NpowxnA4aNdw1EtzVWwOffTQRI0HhvZnQVCAyA+FspSyROtgUWhZImCB/Jqy
pKCs+d76Xr7ny1p7r9y5c2fuzKz3KzKMqp079165Mzlnf2qt9V3/zd/8q3++
7j9ftWrV3/1X8p9/vubp/+HJJ9f8m//xv5Zf/qd/+Xfr/8W//Nv/7Z/9y//j
b//F3z753/3NfyEbn/vPVq168b9cteoff14CAAAAAAAAAAAAAAAAAAAAAAAA
AAD97sSJEztzyFN1t66x06dP28+Tk5Pa8rae8b333itycfTCys5tbUw52rZO
fr7dfDVqJN9e/cbu3r17dna24KsKfgON/RuXs/h/LwAAAOhacvO2Lt/jjz/e
7tRTmoSyTctsi9yOarPbel45o5yi4WXRC+ub1z20bZ38ZLv5atTlH/7hH/y/
teIxreA3cGk5Bj711FPBP2p5OWENAACgy1lMC7rS5B7SbvDk57qbmUFDWdfG
tG7uP+p8TOvmq1ELCWX27+7EsuKvLdibJlns8ccf138j8hLZX/6r/6hle/FU
CAAAgM6zmJZ+dvfu3R1uWENdHtO6WedjGgId+K7qFzXowZR0pkmtO//2AgAA
AJWOaUv3hmZl/vl9cnJS4pv2viWGUckL9e//Ynh4OG83P0+n4aAsOaA2TO45
bT6av/X1J00czZ9U3k76pMrHNHk7eafI6z+Ss1jDEu+04NUo2H6bnaSHajam
FTlLep/gaugsQv3VPqmmZk5Ve33S32TfWtszOGDimxDT3mrfi+0P1fAbEvSm
2UxDuZLaNmmM9dZlvly2P/PMMw3bCQAAgLo0jGl2v+cTh2z8/e9/H8x5kRu/
+J5Q7ht15JWf7xaENTmaZp+GRzPx/ksupklTg5PGfQc6tS04iLyphoPB9FV/
+MMfpIX+tbLdvzaejZX5NuMXFrwaBdsvrwraKZeieEyTlzc8S3yKeJ/galhP
aJFPKlDt9ZFf5aNMHy2vtfKzbMm8wum3sC6imavgNyToz9VrG3whR0dHNb7F
Z9e389RTT6UbCQAAgBo1jGlLLpjor3LHqDeEcqcnKUznvOg+cuPq72/t4PJa
nYBjnQg+qdnoLNmoR9PjJ/7gL2eRU+s+NrXHYpo/mp98Zy+Xt6D32/LyYNpO
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
i6yfe5FhovbNCXbWf2W+S1H39P9emjopMa1f/e6PH1tMOzQ6XXdzAADoJZ2M
aUv3epr0v3nTgqzag5YuFDa2Sl+YiGlL927+V92r6Wd/ydeDBPEt71yrig1s
y4sP/iDBYYOOmA7EtCXXDWTtsSjk76VtYp3cY8t1044SvXrFe9OW3OzC+HR+
f/kC+IXe9MOyE/lg1crctIKNSdOUIRIruHUnDaTBt06/D4kONQvLmYvuaVda
cAU0l5U7KTGtX71zdNJi2kuDn9bdHAAAekmHY5pVR0/cIcuNXFyXT8uS6Mv9
2s1xzJE7TEtqlkS0tv+qqIMs3tnCVJHJR3nxQV4b1IHXZsTdc3H700p/XnF7
7KpmHj9odjC1cCmZjzJrdWZeVUlq8fWXG/6gk6uVmFa8MYkj6BdSe3g1vxSP
ePXKjFSaxxPz8vSq6iWK36xegeDPLPoF069HsyclpvWrczPXLKate2H/3cXf
6m4RAAA9Q2cnNTVDpxVya6enaxhMrGFyX2c3hHITGLTWFyr0bE+5V9S78WAe
VtAqzXG6f/Hqf/Z28p61w+atrZzX/jytfF66RLhd1bzOlKDZtl1e4i+gtiTR
qVT8qkpL9OCJDyjvXTdsRrONiQUraNtQwJ5YNE0DV3BVNfYmvkXycdgljWOa
JuvEiZo9KTGtjz22ediS2tnpn+tuTnOmL96Ym1+ouxUAAAAI2ZQ0S9lxOZpu
ppEqMzEV7BCM98zs2fS91c2elJjWx17dc9pi2t4j39TdnOZseWv06NhM3a0A
AADAfazKSjAI02qt1NWw4ohpqJfEHItpz+04UXdzmvPowIGtuz+ruxUAAAD4
K5uSFq9kbeMeJa81tfJa5/VKTAsUaRh6wtUb8xbT1mwc6qExhDOXb+qUuoU7
i3W3BQAAAP/EltjOnFSYV7qz25Sbm+YxNw0tevqVjyypfXLmQt3NKerQ6LS2
eXzyp7rbAgAAgH9kRUvyCq1IdgtqqnQnLboYDNpsWOnRy6v0GKTXuNJj8ZMS
0/rbrv1fW0zb8e543c25z7mZa3lPbds71p1tBgAAQK8rt26aF8c01k1DU8Yn
f7KY9uSWw3U3569uzt1es3Fo/vbdzGelqdrmJ14+1OGGAQAAoO9pgLJ8pHVR
itc/iWPa1NRUMBxUJ+v5XNbUSYlp/U1y0NpN+yyp/Th7q+4W/ZPRiUvSnhPj
P8RP+Sl18kh0ugEAAAAl6KQwSUkblmntSt+rlVnxw2TW/dDZZxK75AftJpOf
/TDIhif1iGl97/k3T1rkGR75ru7m/JM9h89Ke7btzfhajnx10cc02bPzzUPn
yededxMAAMAKIqFJJ5RpdcogLpWIaUvLPWhaR0UimCS1uNBK+qQeBR773nvH
z1nkeWnw07qb808Gdp7SWo53F38LnvLz6eSx4bWjtbQQnXT91q+PbR6msCcA
AIAioPW96Ys3LPJkxqJaSEu0SWemZoOnnt1+3Mc0eVy6OldLI9ExRz7/Xj5o
OtQAAAAUMW0lePzFgxZ5Jr7NWOSiw3RZNH3s2v+1f2rhzuKajUNBTNt/8nxd
TUVnvDT4qXzQm3eN1N0QAACArkBMWwmsvn2XTPXSrhN9PLX1Q/+UpMggo8nj
+TdP1tRSdIIVupGEfvXGfN3NAQAAqB8xbSU4OjZjkefZ7cfrbs7SjnfHfQrz
9Sf9TDp7yN37zbnbNTYYbaVlP/XxztHJupsDAABQP2LaSnD91q8+9dQeeTa8
dtS3Z+jjKXtKB7/Fj8zS/egP29/+ojtX9wMAAKgLMW2F8MnokzMXamzJ/O27
iTGNjw4csO1b3hq1n7fu/qzGNqN97i7+9tjmYf996IbpkwAAAPWiIP8KMXhg
wm6Dt7/9RY0tOTM1G49plOwmT/04e8sXpQxqVFKtvS+dnf45+D68uud03Y0C
AACoGQFthRif/Mlug594+VCNLXnn6GQ8plE7+HxpES36J021LfIWamw22iRY
Jk8eazftm5tfqLtdAAAAdSKmrRALdxa1mF5ctaPDMmefaQefLy2y98g3suVP
Q2dsizxbV5vRPk9t/TD+PgyPfFd3uwAAAOpETFs5Bnae6obbYD/7zB6PbR6W
p55+5SPboste+xGSj794sK42o038uFb/6IZ6pAAAADUipq0cvtb9lrdGa2mD
n30meW3dC/v9mMZ4ttrdxd/8Pmenf66l2WgTPwL2d3/82K9sLgmu7tYBAADU
hpi2cpy/cN1X5JAE1Pk2+BXcXhr8dOvuz+zXZ14/5n+2l3Tb2tyo0LPbj9uH
e+Tz7/2A2D8Nnam7dQAAALUhpq0ofsDhuZlrnW+An2v2ztFJn9r8Y9f+r+0l
J8Z/sO1Pv/JR59uMNrl6Y973n96cu+3XuX5s8zC1PQEAwIpFTFtRXt1zOqjR
0WG+y2x88ie5M8+MaX5lt/nbd/1YuEtX5zrfbLTD8Mh3fsTjUrSGWr0L/AEA
ANSIddNWlEOj03YP7BeV7owgcGnRdbk/j2Pa1Rvz/oW++Mn+k+c73Gy0if9Y
hz6e0o1+gT/Zod4WAgAA1IWAtqJcujpn98BrN+3TMh0dM/HtFTv7hteO6sZ4
GbUntxwOXui7Xbh17w95naQzl2/6L8PstV/qbScAAEAtiGkrjYQgP+ywk6f2
pSZ1obSlrJLsr+45HbzQp0srAome5qccWmZXvq5ILUNzAcCbmpratm3bwLKx
sbESR5BX6cvlOHK0vN0G8iVelXk6a/Dg4GBem48dO6Y7NP1+miSnkBPJ6eJ2
2mW5cuVK3m59LPGJB+xj6s6rJN9PbWeNhy3xL6X7EdNWGr+E9OCBiU6eestb
o3bqQ6PTtv2Jlw/5mJa5pptfUo0pSz0hnab9NMmggKcfmivfjTY3EwBSNmzY
sOp+Dz/8sGSKgi+XPWX/4AhyzHhPySyr8hW8Lf/ggw8efPDB+OWyUZ4KdpZ7
Wn07Bd9LaXoFgpvt9evXB28wc7f+lvjE42+dvqQ7r5J8fNrOGg/b1L+UXkFM
W2kk49g9sK973wG+OoRfFeuN97/0MS1zwSw/ZWnb3jJ/zESHHfn8+7x6Lwt3
Fv1yeOcvXPfPzs0v+Gd1oXMA6DzLaI888ojcGFuyeOihhwomNdlT9n/ggQfk
tXIEi2zya7CnxCjd8+EsRXrxBgcHfS7TF/rUFnSc1RjT9M3q2a27pDsDSFvF
H7R8ATK/Bhbtu/MqEdPahJi20gTFFeXXzpx39tovdtJg1Ta/sLU8lflyP69N
4l4ti76hKVt3f/bO0cnMp/wnntlftv3tL0jlAOplt4g+3Uhc0hvpIvfJmoNk
fx+yLEwF95MthqapqSmLkMG4LzmRpkXhn6px0KO+WYmQ6d1WIE1hia8BMS0P
MQ39wVfF79gAQt+LFxSZ9H0rm3eNZL5ccplf9O3s9M8daTVKks9LPtOntn6Y
+axfPu+N97+Md/CpvPO1bgBAPPLII5k3zJqzJHw1PEJeoNNeOTm+39ji7bdF
wsxuPkln2pi4F68WHevI6znEtNKHJaahP/gBhDveHe/MSXft/zoxJ+6lwU8b
lozws5n+fPAvbW4vWmI5KxjQqCS+NRzT6GvdHPn8+4Zn1PUdAKAqmQMFl5an
mxW5IbQ7zLimgQ358xt1dGI8g6yghsFHs+FDDz3kW5jXm6ZPCWtPUJ9BazvY
a2U32z/Oib6bTI+sWUPesr5Kn0r0phWswWLNzmuJ7qCnsKIlDbvwCp7d71au
1MxSkzHNittkntG/WX2n8t/gmvjyOImLIK+yjzjvXP4rnf4+GF/rJvPsiZhm
V9veFDEN/cEPOYur37eJL983OnEpeFbuwxsWn0zUBkS3kRytn5TE8+CpH2dv
+TGuC3cWM48ggd1208WvE87NXCsS5QCgICvokXm/rWMI0z0acv+Z1+kWBz3b
MrXM7r2Ll61L96Yt3btp9zEwM9nJ+w2KkMivdjWswXr/rJPmgv2lDUHY9MlC
TxpIzE2TE8VFUR555JHgbebVTgmqtejZ9d5euxeNfKaZ6aPI2eWFNqzUNFVq
JrhWRWJaXNwmaJi9Wd82606VPbW/2NPPOjhjfK1W3fvo/YXS7UW+D0vL8TAu
rRMXusmMaXFZnsyvaH9geesVaP723bWb9tk9cF6dhwrJrbhfJOv6rV+DHa7e
mNenEsPbgll1rKjVzSRH29SzYCLh0MdT9iG+NPhp3hH8ZMaG31LJdA2jHAAU
lx5tpXeJmQUbTbp7Sw9uN6V2uvjeO30W4+emFZxuFrfQZt5ZzRO9k7e79CCm
ye2xjaX0JVZkow+YPn8letPimGaXxdpjp/DNtt5JO6BcNAsL/mroW7a6LrKb
r+viuxqLnz2+aPJf3SJtaDapFYxpdnx9vxbE/LfFkrt9QJatpFX2Ei2P469Y
Zv6S/fVc/t1lXiv/fbAr478PNgTXn922+M8r/mcYt1w/lPgr2h8IaCvT82+e
tBtgXxu/Tc5O/9ywxPozrx9rWHlSbsXtOJl1+9ENLHRnDmsc2Hmq4HfPf0uD
ov2B53acILkDqJD2haVjWnpqVd7UNqUHt0ji+5ji2+ZgFlseX+lx1b0iiom7
1jimWXryN9X+sEFMWxUVSLFODbmAwWF9/srMsPFuegWCuprWHgu5ultwlex+
3p/FrnNwTPu4/Xtp6uzBRZOfdXuzkwELxrT4yBao4zcbd/ta3vRfD+tf8/lL
twTX1j7l+O8Mxb8PwZ6+j8yuZBzTBrLK8lhSJqahP7xzdNJugOPlpCvnO1C2
7v4scx+5D8+sJuH5Zsvdfhtair9auLN4+uzlEi+0Iaxxqcb523d9v2o6WB0d
m2mY7sX1W7/qPnmFJQGkLd6+cf2zLfHj5pk/9uX+RdgtbuazRWJaep/g/tl6
BIKbTLudLthBZquPBeQ2Oz5CkJWsPy6+0bWrEce0+LDaAB8iysU06yOLR376
UyTmAMZnsTcS7xy8nYJnt93ii5ZoWELBmBYUyVy6f9hh8GaDHj0bYRvHN3lK
845dh7yKJbKDvPc4T+V9HyzoWXDLnPWpZ7c+wTim5ZXlySug2pCcVCKkrnqg
y6w3fIm8a2mh7J/5z0reYLzOQvCBFj8pMW1lOjdzzW6AHx040O7TSTSz0+0/
eT5zH7mBb1gFYvriDQoAdsz45E9b3hot8UL/cesENPukRr66aNuffuWj9HHk
VUUWULM0l1dYEkDanVs/TP/hv40fF/6f/74v9y+iwzFNbu3kfi/zDjPvtjxB
biPlaJIjgllCwWypIMVoj1LmieIEl8ggGi3jTrpmY5oNUIzbI2eXN6h5RBog
v/rOGiXPak+QP8JA1kIASq9Vs2fXQaqZuy3dyxRNLXlQMKbFnXTxhMe8t2DR
MjMd6EWz49sfEORoibooie+DXiJ7R9Ydlnmc4HoGMS09Y7RETJMrYH2m2vfa
cJyqHF8/1ofvLUoYdDVmzr5cdf+4zeInJaatTFov3W6AM1eUrpCv7NdiLf0n
Xj5kh5J7/qpaiNjggYkSWThYOkEfJ8Z/0Gd3vDtuG+OCn7EiC6j5EqDnZq41
1VoAS90Xo7ohptkf5zOfLRLT4rTiBTGtSEtK1KNYulfKz6bzxF1LtiW4nc5s
cBzT4j3zxlI2G9OKXGRPZ73JZX/43iLR8R1yYsJgubMHk+wCQfQropWC/Jkx
LT6UHwwZCxrg55HpO5UrHFeMLP59SH/NgsHGwWGLzBhtKqbpSyxH67+1xDhV
7e/zQy71n7lP4rol8a+1qZMS01asLW+NNuzhqsTc/IK/Y2+xC+yN97+0Q8k9
fFWNREzLgFjCKsjPQ7SHLYfnU3Ze75jXcAG14A8ODcfNAoh1W4zqhpjW4RIi
RVrS4qQbGz8ZDIqzFhbp/ut8TCuScTLLPFpXRSsxreHZM4eYBgoWgfEH7ExM
S/B9cJLUrBiI0QIstk/x70P6DaZzWbUxTfuIg74w7UzMG6eqkSroupVL4ftn
9a8EVZ2UmLZiSTQrUnCvdXI3bidqvZD+6bOX7WiPbR6upIWI2YSvvAXH8+w5
fDaOaWs2DskBz1+47kdC5pXiD6QXUPM5TkfwFjwsANNtc8e6YW5ahwvyJxSZ
4mRLgKUPpccJxvXZDXOR7r8u7E2zT0q7tKRh8eSs9HlbObvtltkzpdox6LH1
mJbXA2ji42t/pS/vn5hEFpyuYG9a8JG1NaZlZi7dmPeR6b+R4H8TdKP980x/
fM2elJi2Ys1cvunvmYOq6RXy9UPyxq0VJzfhfjUBBrm1iU34koR1c+528Rf6
BfJ8tZD9J8/7CjDFZ72lF1Dza7Xr45MzF4q3FgDy5E0sKhiyLD40XN5aDjiw
XPo+MxKma06qgj1u6ZhWbm5avHNVMS0x7UtHcmpj9CY5c3ZPKzGtqbMXH5nZ
UAdiWnpAryeXNHPen1wBW9RAtxT/Pgwk56YFi7A3NTdN/8EWj2nakmB/PWPe
Xzz04ieOoy3UbK4VQuSL5P8XoNmTEtNWssdfPNiBvFOkfkhTNu8asQOm67Sj
ND/hq/jK0dYHZ7PP7OdnXj/m11Mofsz0AmpPv/JR3gBLAGhFXkV9vctNjGsy
eVXp9F7UD3zSm8/M+SkF67pbWYO8HfIqAdpLEgsEW97pZExL1Fq0/qClZK6x
kZDp87Zydos8mX2dervejkqPrcQ0C92Z3TeyUXKZLa+me8ajc4OsV/z70GKl
x7x/DiXGBus/8MzElLcEhjYv8w1qmLWvjexpNUb8XLZmTyox7cpH/zp+/PJd
dvU/2c7+fbO/vxV/7/i5NrXH1w859+ne1o9/5j899m//7xf0gM9uP94917Of
9tcIL9f5P/27//nIf/ibgscfPTIo++vjwL//X388+Hfv/Lv/RX62z8seV2/M
F2+PLaAmx/n8rUdtt5kDT+q5/PHXbBzSg3fV9eyJ/a+d+reZuwErU2aNcVuh
KbhP1jGHwUbrOPB//M+sHJ5ZeF/uWuMJZXksST300EPBTbUOiYxzXF6ekiP4
ZJG5KFUHYtpSzsplwUdgS335ffylKxfTCp49b7elnLXJGupATFty9RuD75V9
OYPBn/G7C6polvg+xOum6TFXJddNs85l/y/FVqlr6mpnDpLUM6aH/ma+Qb1i
+rNcXrtc9lcd3dLsSSWmZU68vf7ZlswWynb275v9D41O282tLkNWeXuC+iFX
Rv6+kuO/8dL/bse8fuvXLrmefbO/LXwg17mp4x/8j/+m4eflpygWbI8txJbX
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
77wXKJqO+2jKfRifWTA34ZLYLYbPqylHiJBsM/GtDPlmPZKt6589bxMNebsy
YQQAAMvK5+x5hMp5yCcWxj402rR/4ZJY8l5H39znYxxItqFy+mWcQBgHrZBs
HW0aAAD4MaIazEef+b6YWeX8/BGxP5gatHyMfG/TdMGs5Ms3GW3FJXH/+F5i
u5NsE97xmE+/jK+q9/iRbF1PJD81o1yWDxoljAAAYEFxSFq/Wf5J5fy/3t1a
/KQ53yhksSSk166c89EEYfPjCOJUzDKec4lk6/zFLIPec+v+gmTrZkeIlMv6
ESKEEQAArEM9mqeah0+nGj45aOfHCcXmvSFXdK6iSzyHg/twxZvXas1PGfZr
kq0b7tbL7QPJ1vU2zYuS+WHWZZAwAgCApfhU+SeliCuZvOWsPxZ2K4rYrz/1
1TQfmV72SnlXVSkUt+KOLJ/ZWAJFsnVeBipp42MJfYINydb1Ni2vPwY/z9qv
CSMAAFiKi8An08Wetz+dTq6uy1GQuE92RpXAukrc/CwCL0Sq55rlEsnWOXMi
JvdHlHJ/cSfZmv7xfexPfpCB5wT6yT+EEQAAvJyXKmbiMk/dq8Lxk8L6pPTm
hm1aLFOeHt4eB2Xs/PAvc22cc6nEjWTrHDS3DM6l3G7cSbZm2F75rlL/yXf8
lbUzwggAABahuuU8l69UJ6JaUYPe2veqN7wmFcyKTF+RVIGnFsPB1AvqPVOg
VB4/ySWSrYuYzHKJZMsUhOEzqdWIaVx/VQYOtxAQRgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAUPwGE8TzGw==
    "], {{0, 192.5}, {582.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{582.5, 192.5},
  PlotRange->{{0, 582.5}, {0, 192.5}}]], "Output",
 CellChangeTimes->{{3.945276726790823*^9, 3.9452767681538353`*^9}, 
   3.945276814338442*^9, 3.9452770599034977`*^9, {3.9452771080538826`*^9, 
   3.9452771422729187`*^9}, 3.9453527795185127`*^9},
 CellLabel->
  "Out[414]=",ExpressionUUID->"af9578ff-e2b6-f34e-a9c9-748d87356147"]
}, {2}]],

Cell["\<\
In summary, experiments with quantum systems will generally give results \
which follow a measurement distribution that can be theoretically computed. \
To see if the results are really consistent with the theoretical prediction, \
the experiment must be carried out for many trials to build statistical \
confidence in the answer.\
\>", "Text",
 CellChangeTimes->{{3.9453534263629246`*^9, 
  3.945353562108654*^9}},ExpressionUUID->"4d0ce751-a5ec-8545-80de-\
bae00fb81fb7"],

Cell["\<\
In future lessons, you will see some quantum algorithms which are not \
guaranteed to give a correct solution, but will give a correct the solution \
with high probability. In such cases, you must then consider not only the \
quantum algorithm, but also the practical considerations of repeating the \
algorithm multiple times to verify the solution.\
\>", "Text",
 CellChangeTimes->{{3.9453535657717323`*^9, 
  3.9453536954274387`*^9}},ExpressionUUID->"f95bc54a-707c-6a40-a94e-\
9a52b6c0944d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{845, 453},
WindowMargins->{{Automatic, 15.5}, {3.5, Automatic}},
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5fcd9741-bbf6-774b-b015-725de9406468"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 167, 3, 66, "Section",ExpressionUUID->"a95eef93-0a1c-3746-8d2f-8c03d537a6f2"],
Cell[746, 27, 214, 3, 50, "Code",ExpressionUUID->"b3e38939-ad2e-dc42-9e22-cfae2a09644e"],
Cell[CellGroupData[{
Cell[985, 34, 162, 3, 53, "Subsection",ExpressionUUID->"d47a7f2d-e3d8-a646-800b-2925ca67ba16"],
Cell[1150, 39, 257, 4, 30, "Item",ExpressionUUID->"d25bbdeb-3d67-2b4e-a22a-7dccf980dd4f"],
Cell[1410, 45, 168, 3, 30, "Item",ExpressionUUID->"1ad28be2-632c-2f46-baa1-84defee11031"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1615, 53, 227, 4, 53, "Subsection",ExpressionUUID->"8a65c536-47fd-0649-a611-4a5099f3c6b0"],
Cell[1845, 59, 741, 13, 99, "Text",ExpressionUUID->"a99a2876-174d-ad44-aee4-86201ca9154d"],
Cell[2589, 74, 237, 6, 33, "Text",ExpressionUUID->"0caacd39-bc7a-df4c-bcef-56175aed7f9b"],
Cell[2829, 82, 437, 10, 30, "Item",ExpressionUUID->"dc127136-a384-b241-87a8-49163a2a9890"],
Cell[3269, 94, 434, 10, 30, "Item",ExpressionUUID->"b243c298-eff2-5a4f-b900-358f1e9df0e8"],
Cell[3706, 106, 555, 11, 30, "Item",ExpressionUUID->"5186e9a5-7cc1-434d-bcd6-437f95594bb8"],
Cell[4264, 119, 687, 13, 99, "Text",ExpressionUUID->"a7ad6136-43aa-3e46-8dce-d3445484c29c"],
Cell[4954, 134, 252, 6, 33, "Text",ExpressionUUID->"7b606baf-0b78-564a-8b89-f19177ee58d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5243, 145, 215, 4, 53, "Subsection",ExpressionUUID->"239562c2-459c-0742-ac91-9ac33b151e7c"],
Cell[5461, 151, 349, 7, 55, "Text",ExpressionUUID->"d70f70ef-bc1a-a64b-bcc3-9a38afeacffd"],
Cell[CellGroupData[{
Cell[5835, 162, 235, 5, 28, "Input",ExpressionUUID->"e18b0798-dd83-cf42-ac18-3462fd8e8583"],
Cell[6073, 169, 175, 2, 32, "Output",ExpressionUUID->"dcb7b315-af9e-1041-9634-55884575f452"]
}, Open  ]],
Cell[6263, 174, 274, 6, 55, "Text",ExpressionUUID->"0f46b1ee-01e5-0a41-b171-f167e749208c"],
Cell[CellGroupData[{
Cell[6562, 184, 219, 5, 28, "Input",ExpressionUUID->"2dd8d839-102b-d64a-926d-a8953aa8f5fb"],
Cell[6784, 191, 387, 7, 32, "Output",ExpressionUUID->"a82c25bb-c456-9343-b8b6-7ce3012f138a"]
}, Open  ]],
Cell[7186, 201, 992, 18, 99, "Text",ExpressionUUID->"9a92bab1-48ed-4846-98e8-e1ec8c64013e"],
Cell[CellGroupData[{
Cell[8203, 223, 461, 10, 47, "Input",ExpressionUUID->"bf3194b2-7c9a-1d41-974f-a7362ace1fbb"],
Cell[8667, 235, 413, 7, 32, "Output",ExpressionUUID->"906c2c8f-85b4-c245-975f-af779e990965"]
}, Open  ]],
Cell[9095, 245, 284, 7, 33, "Text",ExpressionUUID->"04da42bd-d5dd-764f-b4c9-d9cfb6aa1b2d"],
Cell[CellGroupData[{
Cell[9404, 256, 444, 11, 28, "Input",ExpressionUUID->"50bc984f-1b70-8e47-a4e2-2c8db67574ec"],
Cell[9851, 269, 8542, 237, 244, "Output",ExpressionUUID->"2c5ba8f2-d211-0549-879f-d8e8b48b1751"]
}, Open  ]],
Cell[18408, 509, 559, 9, 77, "Text",ExpressionUUID->"0fdaba13-dbd1-a24f-b373-49cd377fb42b"],
Cell[18970, 520, 579, 10, 99, "Text",ExpressionUUID->"43c77180-c73e-9546-a1af-733f01f9ae98"],
Cell[19552, 532, 660, 16, 55, "Text",ExpressionUUID->"c227e502-0ded-414a-9427-528a24b9b22d"],
Cell[CellGroupData[{
Cell[20237, 552, 389, 8, 28, "Input",ExpressionUUID->"31c19bda-e9ba-cb4f-bc10-5c1d70e918bc"],
Cell[20629, 562, 803, 17, 42, "Output",ExpressionUUID->"3bbd54c5-0e7a-dd4f-8783-6ef987962e0c"]
}, Open  ]],
Cell[21447, 582, 230, 5, 33, "Text",ExpressionUUID->"e35c5665-0b97-3041-b4a7-7da624afb7a1"],
Cell[CellGroupData[{
Cell[21702, 591, 527, 11, 47, "Input",ExpressionUUID->"8d69de51-aef6-624d-aaab-3b4a51654dbb"],
Cell[22232, 604, 721, 15, 70, "Output",ExpressionUUID->"4609b389-d561-9a42-bdd5-0f576663b69d"]
}, Open  ]],
Cell[22968, 622, 897, 19, 99, "Text",ExpressionUUID->"1457c585-02f0-4b46-9808-a4c168d63505"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23902, 646, 155, 3, 53, "Subsection",ExpressionUUID->"4eb8a8c3-047c-ab4d-be2a-2cb5db88e066"],
Cell[24060, 651, 529, 9, 77, "Text",ExpressionUUID->"3cf69fa9-5123-724d-8639-aa49f2a19554"],
Cell[CellGroupData[{
Cell[24614, 664, 2245, 53, 180, "Input",ExpressionUUID->"8ea4443b-40ff-744b-afec-e244ec76b04c"],
Cell[26862, 719, 69469, 1142, 377, "Output",ExpressionUUID->"834e966b-7489-0641-8268-2cbe2f5a399f"]
}, {2}]],
Cell[96343, 1864, 646, 16, 55, "Text",ExpressionUUID->"1ab340ba-2f54-bf4d-8f6a-7001204cfc61"],
Cell[CellGroupData[{
Cell[97014, 1884, 330, 9, 28, "Input",ExpressionUUID->"0afaf606-98b3-794c-a0c3-0a217e695f2e"],
Cell[97347, 1895, 1955, 45, 32, "Output",ExpressionUUID->"6bfbbda0-44f9-9b4f-9f6e-30c419f657c7"]
}, Open  ]],
Cell[99317, 1943, 302, 7, 33, "Text",ExpressionUUID->"db16f2b9-ea8a-e44d-9236-9755e151019c"],
Cell[CellGroupData[{
Cell[99644, 1954, 525, 13, 47, "Input",ExpressionUUID->"a5ba56cf-2476-9c49-89a3-cc990d54f619"],
Cell[100172, 1969, 1928, 44, 32, "Output",ExpressionUUID->"18ef0be5-07ae-2d45-aa41-4e7db3324979"]
}, Open  ]],
Cell[102115, 2016, 360, 7, 55, "Text",ExpressionUUID->"26eb9de9-1e4c-8a46-845e-b4ee7146bce1"],
Cell[CellGroupData[{
Cell[102500, 2027, 519, 11, 47, "Input",ExpressionUUID->"b9c87a9f-d154-cb4b-b01e-8a489dfb6b4c"],
Cell[103022, 2040, 3107, 83, 237, "Output",ExpressionUUID->"a829ea09-4d9a-8842-9d87-25e3c459e99a"]
}, Open  ]],
Cell[106144, 2126, 428, 8, 33, "Text",ExpressionUUID->"e8090885-604b-054b-9b6d-319c02970d18"],
Cell[CellGroupData[{
Cell[106597, 2138, 1392, 31, 31, "Input",ExpressionUUID->"294d7035-4518-9f44-a473-66b55864bdd6"],
Cell[107992, 2171, 795, 17, 42, "Output",ExpressionUUID->"5095e1af-e384-8b4c-ac77-43afd8d112f0"]
}, Open  ]],
Cell[108802, 2191, 413, 8, 55, "Text",ExpressionUUID->"c1aea2e7-b920-6b43-a038-3003cfd3af28"],
Cell[CellGroupData[{
Cell[109240, 2203, 1424, 31, 31, "Input",ExpressionUUID->"92d8a3ac-800c-a545-98a5-a40f00308923"],
Cell[110667, 2236, 195, 2, 32, "Output",ExpressionUUID->"86017e91-4f71-6643-bf46-2b4df190db51"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110911, 2244, 166, 3, 53, "Subsection",ExpressionUUID->"a9321b63-cc6b-4740-b3f1-aaaa92ea8220"],
Cell[111080, 2249, 885, 17, 99, "Text",ExpressionUUID->"351ace65-3357-4846-8d30-e6eb3b1a04e1"],
Cell[111968, 2268, 234, 6, 33, "Text",ExpressionUUID->"2fc548bd-8bda-2b48-b8aa-08146da0274f"],
Cell[CellGroupData[{
Cell[112227, 2278, 522, 13, 28, "Input",ExpressionUUID->"5c33e0b0-6ee4-4c4b-b310-b41e4805ba34"],
Cell[112752, 2293, 196, 3, 45, "Output",ExpressionUUID->"2e32dd50-f283-cb4f-9c7a-bd72c9e9b600"]
}, Open  ]],
Cell[112963, 2299, 368, 8, 55, "Text",ExpressionUUID->"1ab52227-a817-5b4c-bede-5b1b957ccf10"],
Cell[CellGroupData[{
Cell[113356, 2311, 403, 9, 28, "Input",ExpressionUUID->"c6ef0b9d-2f71-7d4f-89dc-2245c96d0ac8"],
Cell[113762, 2322, 193, 2, 32, "Output",ExpressionUUID->"35012b05-9f1c-a14b-8df2-faeb11cb1037"]
}, Open  ]],
Cell[113970, 2327, 473, 8, 55, "Text",ExpressionUUID->"9508c8e1-3572-7542-8e6a-8f8d63f90c3f"],
Cell[CellGroupData[{
Cell[114468, 2339, 1894, 42, 31, "Input",ExpressionUUID->"6ec4a3f4-c9d7-fd4c-b2c0-844fec3b846d"],
Cell[116365, 2383, 25641, 425, 242, "Output",ExpressionUUID->"98f542d2-d1e1-ad40-9718-455a573511a4"]
}, Open  ]],
Cell[142021, 2811, 371, 7, 55, "Text",ExpressionUUID->"4d12d6b6-e936-5c4b-bae1-a1d673dae2ec"],
Cell[CellGroupData[{
Cell[142417, 2822, 738, 17, 28, "Input",ExpressionUUID->"a21b4b9b-3b8f-f84d-8edb-e9ae0c841f6d"],
Cell[143158, 2841, 289, 4, 32, "Output",ExpressionUUID->"9b8eedef-f808-d14a-bfa0-211afba76afa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143496, 2851, 163, 3, 53, "Subsection",ExpressionUUID->"0a131c70-c1a0-154e-b25d-65ca04ce870a"],
Cell[143662, 2856, 542, 10, 77, "Text",ExpressionUUID->"e2c71ff4-9f80-5d49-b290-754051e84709"],
Cell[CellGroupData[{
Cell[144229, 2870, 461, 11, 47, "Input",ExpressionUUID->"43c557b7-34a4-474b-ac17-09d3f078a2e1"],
Cell[144693, 2883, 415, 8, 32, "Output",ExpressionUUID->"7075ea50-69db-884c-911c-60afde2fdb6d"]
}, Open  ]],
Cell[145123, 2894, 256, 6, 33, "Text",ExpressionUUID->"70a2554a-03bd-1f45-9202-76075444f3af"],
Cell[CellGroupData[{
Cell[145404, 2904, 317, 7, 28, "Input",ExpressionUUID->"27a1e0a7-6f8f-834f-bac9-eed6d4756e2c"],
Cell[145724, 2913, 3423, 87, 244, "Output",ExpressionUUID->"6875e267-b23a-6a40-abae-6e727d1a3953"]
}, Open  ]],
Cell[149162, 3003, 515, 10, 77, "Text",ExpressionUUID->"3c348b79-d7f6-594c-8cde-2a4a26b9b7c6"],
Cell[CellGroupData[{
Cell[149702, 3017, 1628, 41, 85, "Input",ExpressionUUID->"f9dfdb9f-1e30-3642-ad2d-892a8ea845cd"],
Cell[151333, 3060, 63284, 1088, 281, "Output",ExpressionUUID->"f96955fb-8c36-e145-a47f-fee5fc9b7dc6"]
}, {2}]],
Cell[214629, 4151, 512, 9, 77, "Text",ExpressionUUID->"471835a4-9269-b148-aff2-69b81eeea1cb"],
Cell[CellGroupData[{
Cell[215166, 4164, 3299, 76, 199, "Input",ExpressionUUID->"44605516-c66c-4443-8c8f-bda5e4779c03"],
Cell[218468, 4242, 3495, 64, 348, "Output",ExpressionUUID->"b3400dca-3c3e-dd42-b98c-d31b91adb7df"]
}, {2}]],
Cell[221975, 4309, 511, 10, 55, "Text",ExpressionUUID->"1861eeca-7ade-9641-9aa0-d72efaaea2a9"],
Cell[CellGroupData[{
Cell[222511, 4323, 816, 21, 47, "Input",ExpressionUUID->"d11daf24-bc1d-e04b-b2b5-ec0412bb7ea3"],
Cell[223330, 4346, 47286, 775, 234, "Output",ExpressionUUID->"fbb96dbf-337e-1347-a9da-3e5afb6287cc"]
}, {2}]],
Cell[270628, 5124, 286, 6, 33, "Text",ExpressionUUID->"37141724-675e-b444-9061-a2e983f99a0e"],
Cell[CellGroupData[{
Cell[270939, 5134, 467, 11, 28, "Input",ExpressionUUID->"513f9d3e-a2f7-b244-acc8-5396793e3ce6"],
Cell[271409, 5147, 179, 3, 32, "Output",ExpressionUUID->"7b7ee60f-4ec5-7841-81e0-5c6dba52f33a"]
}, Open  ]],
Cell[271603, 5153, 542, 9, 77, "Text",ExpressionUUID->"cdfe885e-042c-ab45-a8fc-351bcfd50649"],
Cell[272148, 5164, 248, 6, 33, "Text",ExpressionUUID->"6ecc0e7b-fa01-1d43-9d82-98943d101a19"],
Cell[CellGroupData[{
Cell[272421, 5174, 386, 9, 28, "Input",ExpressionUUID->"81cd32f0-b5a7-9a42-97b8-672c28b93be6"],
Cell[272810, 5185, 687, 15, 66, "Output",ExpressionUUID->"c3e223a6-f180-0344-976f-b28b49e2833c"]
}, Open  ]],
Cell[273512, 5203, 414, 8, 55, "Text",ExpressionUUID->"a7ddad09-7d7d-674d-8221-597de2d02e78"],
Cell[CellGroupData[{
Cell[273951, 5215, 2075, 50, 150, "Input",ExpressionUUID->"765efef8-1a72-3f4f-b13d-377da0e7cb7e"],
Cell[276029, 5267, 34769, 574, 216, "Output",ExpressionUUID->"a7a13fa5-eb1e-a847-8ab3-8c9c9df77439"]
}, {2}]],
Cell[310810, 5844, 229, 5, 33, "Text",ExpressionUUID->"e1782641-f0c9-f845-a438-05bf38bc2cea"],
Cell[CellGroupData[{
Cell[311064, 5853, 444, 10, 47, "Input",ExpressionUUID->"de9c42c7-5c51-b04b-b4b1-b3db90e01cac"],
Cell[311511, 5865, 1259, 19, 70, "Output",ExpressionUUID->"1348cb94-7693-7d42-b4c5-50d61fd6d35b"]
}, Open  ]],
Cell[312785, 5887, 411, 8, 55, "Text",ExpressionUUID->"30b91e46-259c-bb49-ae9a-7b2295094e27"],
Cell[CellGroupData[{
Cell[313221, 5899, 2009, 50, 149, "Input",ExpressionUUID->"ee2a4a69-847d-0442-8e85-46b8b3357119"],
Cell[315233, 5951, 38090, 629, 209, "Output",ExpressionUUID->"af9578ff-e2b6-f34e-a9c9-748d87356147"]
}, {2}]],
Cell[353335, 6583, 483, 9, 77, "Text",ExpressionUUID->"4d0ce751-a5ec-8545-80de-bae00fb81fb7"],
Cell[353821, 6594, 504, 9, 77, "Text",ExpressionUUID->"f95bc54a-707c-6a40-a94e-9a52b6c0944d"]
}, Open  ]]
}, Open  ]]
}
]
*)

